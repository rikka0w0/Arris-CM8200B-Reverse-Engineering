/*
<:copyright-BRCM:2011:proprietary:standard

   Copyright (c) 2011 Broadcom 
   All Rights Reserved

 This program is the proprietary software of Broadcom and/or its
 licensors, and may only be used, duplicated, modified or distributed pursuant
 to the terms and conditions of a separate, written license agreement executed
 between you and Broadcom (an "Authorized License").  Except as set forth in
 an Authorized License, Broadcom grants no license (express or implied), right
 to use, or waiver of any kind with respect to the Software, and Broadcom
 expressly reserves all rights in and to the Software and all intellectual
 property rights therein.  IF YOU HAVE NO AUTHORIZED LICENSE, THEN YOU HAVE
 NO RIGHT TO USE THIS SOFTWARE IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY
 BROADCOM AND DISCONTINUE ALL USE OF THE SOFTWARE.

 Except as expressly set forth in the Authorized License,

 1. This program, including its structure, sequence and organization,
    constitutes the valuable trade secrets of Broadcom, and you shall use
    all reasonable efforts to protect the confidentiality thereof, and to
    use this information only in connection with your use of Broadcom
    integrated circuit products.

 2. TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS"
    AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS OR
    WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH
    RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND
    ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY, NONINFRINGEMENT,
    FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES, ACCURACY OR
    COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR CORRESPONDENCE
    TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING OUT OF USE OR
    PERFORMANCE OF THE SOFTWARE.

 3. TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM OR
    ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL,
    INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY
    WAY RELATING TO YOUR USE OF OR INABILITY TO USE THE SOFTWARE EVEN
    IF BROADCOM HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES;
    OR (ii) ANY AMOUNT IN EXCESS OF THE AMOUNT ACTUALLY PAID FOR THE
    SOFTWARE ITSELF OR U.S. $1, WHICHEVER IS GREATER. THESE LIMITATIONS
    SHALL APPLY NOTWITHSTANDING ANY FAILURE OF ESSENTIAL PURPOSE OF ANY
    LIMITED REMEDY.
:>

*/
/***********************************************************************/
/*                                                                     */
/*   MODULE:  6838_common.h                                           */
/*   PURPOSE: Define addresses of major hardware components of         */
/*            BCM6838                                                 */
/*                                                                     */
/***********************************************************************/
#ifndef __BCM6838_MAP_COMMON_H
#define __BCM6838_MAP_COMMON_H

#ifdef __cplusplus
extern "C" {
#endif

#if defined(__KERNEL__) || defined (_CFE_) || defined(FAP_4KE)
/* Access to registers from kernelspace */
#define REG_BASE                 0xa0000000
#else
/* Access to registers from userspace, see bcm_mmap.h for api */
#define REG_BASE                 (bcm_mmap_info.mmap_addr)
#define BCM_MMAP_INFO_BASE       0x10000000
#define BCM_MMAP_INFO_SIZE       0x01000000
#endif



/*
#####################################################################
# System PLL Control Register
#####################################################################
*/

#define MEMC_BASE		   ( REG_BASE +  0x12000000 )  /* DDR Memory Controller base*/
#define PCIE_0_BASE		   ( REG_BASE +  0x12800000 ) /* PCIe-0 Top*/
#define PCIE_1_BASE		   ( REG_BASE +  0x12a00000 ) /* PCIe-1 Top*/
#define RDP_BASE		   ( REG_BASE +  0x13000000 ) /* RDP block */
#define APM_BASE		   ( REG_BASE +  0x13a00000 ) /* APM Control Block*/
#define PCM_BASE              ( REG_BASE +  0x13a00200 ) /* APM PCM Registers */
#define APM_HVG_BASE          ( REG_BASE +  0x13a00300 ) /* APM HVG Registers */
#define APM_PCM_DMA_BASE      ( REG_BASE +  0x13a00800 ) /* APM/PCM DMA control registers */
#define BMU_BASE		   ( REG_BASE +  0x13a01000 ) /* BMU Control Block*/
#define PICO_IMEM_BASE		   ( REG_BASE +  0x13a10000 ) /* PICO IMEM Block */
#define PMC_BASE		   ( REG_BASE +  0x13e00000 ) /* PMC Block*/
#define PROC_MON_BASE		   ( REG_BASE +  0x13e80000 ) /* PMC Process Monitor Block */
#define PERF_BASE                  ( REG_BASE +  0x14e00000 ) /* chip control interrupt register*/
#define TIMR_BASE                  ( REG_BASE +  0x14e000c0 ) /* timer registers */
#define GPIO_BASE                  ( REG_BASE +  0x14e00100 ) /* gpio registers */
#define WATCHDOG_BASE		( REG_BASE +  0x14e002d0 ) 	/* watchdog registers */
#define PERF_EXT_INT		   ( REG_BASE +  0x14e00300 ) /* peripheral extended interrupt register*/ 	
#define DBG_PERF		   ( REG_BASE +  0x14e003e0 ) /* software debug register per*/
#define OTP_BASE		   ( REG_BASE +  0x14e00400 ) /* OTP Block */
#define UART_BASE                  ( REG_BASE +  0x14e00500 ) /* uart 0 registers */
#define UART1_BASE                 ( REG_BASE +  0x14e00520 ) /* uart 1 registers */
#define UART2_BASE		   ( REG_BASE +  0x14e00540 ) /* uart 2 registers */
#define MDIO_EXT_BASE		   ( REG_BASE +  0x14e00600 ) /* External MDIO Registers PER*/
#define MDIO_EGPHY_BASE		   ( REG_BASE +  0x14e00610 ) /* EGPHY MDIO Registers PER*/
#define MDIO_SATA_BASE	     	   ( REG_BASE +  0x14e00620 ) /* SATA MDIO register per*/
#define MDIO_AE_BASE	  	   ( REG_BASE +  0x14e00630 )	/* AE PCS MDIO Registers PER*/
#define USIM_BASE		   ( REG_BASE +  0x14e00700 ) /* USIM interface registers*/
#define I2C_BASE		   ( REG_BASE +  0x14e00e00 ) /* I2C interface register*/
#define LED_BASE		   ( REG_BASE +  0x14e00f00 ) /* LED control register*/
#define HSSPIM_BASE	           ( REG_BASE +  0x14e01000 ) /* High Speed SPI Master registes*/
#define NAND_INTR_BASE		   ( REG_BASE +  0x14e000f0 ) /*NAND flash interrupt base*/
#define NAND_REG_BASE		   ( REG_BASE +  0x14e02200 ) /* NAND flash controller registers*/
#define NAND_CACHE_BASE	           ( REG_BASE +  0x14e02600 ) /* NAND flash cache registers */
#define BSP_KS_BASE		   ( REG_BASE +  0x14e03000 ) /* DRAM scrambler key generator BSP_KS register*/
#define BSP_RNG_BASE		   ( REG_BASE +  0x14e03100 ) /* DRAM scrambler key generator BSP_RNG */
#define USBH_BASE		   ( REG_BASE +  0x15400000 ) /* USBH control block*/
#define USBD_BASE		   ( REG_BASE +  0x15600000 ) /* USBD control block*/
 
#define PSRAM_BASE			0xb30a0000
#define PSRAM_BASE_KSEG0	0x930a0000
#define PSRAM_SIZE			0x20000 /* 128KB */

/*
#####################################################################
# GPIO Control Registers
#####################################################################
*/
#define GPIO_PER_STRAP_BUS_REG						0x94
#define GPIO_PER_STRAP_BUS_SPI_3_BOOT				4
#define GPIO_PER_STRAP_BUS_SPI_4_BOOT				5
#define GPIO_PER_STRAP_BUS_SPI_NAND_BOOT			1

#define GPIO_PER_STRAP_BUS_BOOT_CFG_SHIFT			11
#define GPIO_PER_STRAP_BUS_BOOT_CFG_MASK			(0x7 << GPIO_PER_STRAP_BUS_BOOT_CFG_SHIFT)

#define GPIO_PER_STRAP_BUS_PAGE_SIZE_SHIFT			9
#define GPIO_PER_STRAP_BUS_PAGE_SIZE_MASK			(0x3 << GPIO_PER_STRAP_BUS_PAGE_SIZE_SHIFT)

#define GPIO_DATA_LOW						   0x2c /* 2c-30 */
#define GPIO_DATA_MID						   0x30 /* 30-38 */
#define GPIO_DATA_HIGH						   0x38 /* 38-58 */
#define GPIO_PER_TESTCONTROL				           0x6c

/*
#####################################################################
# OTP Control / Status Registers
#####################################################################
*/

#define OTP_OTP_CONFIG                          0x00
#define OTP_OTP_CONTROL                         0x04
#define OTP_OTP_STATUS                          0x08
#define OTP_OTP_ADDR                            0x0c
#define OTP_OTP_WRITE                           0x10
#define OTP_OTP_READ                            0x14

#define OTP_OTP_SECURE_BOOT_CFG                 0x20
#define OTP_OTP_SECURE_BOOT_CFG_LOCK_JTAG       (1 << 5)
#define OTP_OTP_SECURE_BOOT_CFG_BTRM_LOCKDOWN   (1 << 0)


#define OTP_SHADOW_BRCM_BITS_0_31               0x40
#define OTP_BRCM_ALLOW_SEC_BT_ROW               OTP_SHADOW_BRCM_BITS_0_31
#define OTP_BRCM_ALLOW_SEC_BT_SHIFT             22
#define OTP_BRCM_ALLOW_SEC_BT_MASK              (0x1 << OTP_BRCM_ALLOW_SEC_BT_SHIFT)
#define OTP_BRCM_VIPER_FREQ_SHIFT               18
#define OTP_BRCM_VIPER_FREQ_MASK                (0x7 << OTP_BRCM_VIPER_FREQ_SHIFT)
#define OTP_BRCM_RDP_FREQ_SHIFT                 12
#define OTP_BRCM_RDP_FREQ_MASK                  (0x3 << OTP_BRCM_RDP_FREQ_SHIFT)
#define OTP_BRCM_DDR_MAX_FREQ_SHIFT             15
#define OTP_BRCM_DDR_MAX_FREQ_MASK              (0x7 << OTP_BRCM_DDR_MAX_FREQ_SHIFT)
#define OTP_BRCM_TP1_ENABLE_SHIFT               14
#define OTP_BRCM_TP1_ENABLE_MASK                (1<<OTP_BRCM_TP1_ENABLE_SHIFT)
#define OTP_BRCM_MEK_MIV_ROW			OTP_SHADOW_BRCM_BITS_0_31 
#define OTP_BRCM_MEK_MIV_SHIFT		 	4
#define OTP_BRCM_MEK_MIV_MASK		        (7 << OTP_BRCM_MEK_MIV_SHIFT)


#define OTP_SHADOW_BRCM_BITS_96_127             0x4c
#define OTP_BRCM_BTRM_BOOT_ENABLE_ROW           OTP_SHADOW_BRCM_BITS_96_127
#define OTP_BRCM_BTRM_BOOT_ENABLE_SHIFT         28
#define OTP_BRCM_BTRM_BOOT_ENABLE_MASK          (0x1 << OTP_BRCM_BTRM_BOOT_ENABLE_SHIFT)


#define OTP_SHADOW_CUST_BITS_0_31               0x60 /* bits 448 thru 479 */
#define OTP_CUST_OP_INUSE_ROW			OTP_SHADOW_CUST_BITS_0_31
#define OTP_CUST_OP_INUSE_SHIFT			9
#define OTP_CUST_OP_INUSE_MASK        		(1 << OTP_CUST_OP_INUSE_SHIFT)
#define OTP_CUST_BTRM_BOOT_ENABLE_ROW		OTP_SHADOW_CUST_BITS_0_31
#define OTP_CUST_BTRM_BOOT_ENABLE_SHIFT         4
#define OTP_CUST_BTRM_BOOT_ENABLE_MASK          (0x1 << OTP_CUST_BTRM_BOOT_ENABLE_SHIFT)


#define OTP_SHADOW_CUST_SW_BITS_0_31            0x6c /* bits 640 thru 671 */
#define OTP_CUST_MFG_MRKTID_ROW      		OTP_SHADOW_CUST_SW_BITS_0_31
#define OTP_CUST_MFG_MRKTID_SHIFT    		0
#define OTP_CUST_MFG_MRKTID_MASK		(0xffff << OTP_CUST_MFG_MRKTID_SHIFT)
#define OTP_CUST_OP_MRKTID_ROW      		OTP_SHADOW_CUST_SW_BITS_0_31
#define OTP_CUST_OP_MRKTID_SHIFT     		16
#define OTP_CUST_OP_MRKTID_MASK			(0xffff << OTP_CUST_OP_MRKTID_SHIFT)


#define OTP_SHADOW_CUST_SW_BITS_32_63           0x70 /* bits 672 thru 703 */
#define OTP_CUST_AUTH_FAIL_NO_JTAG_ROW          OTP_SHADOW_CUST_SW_BITS_32_63
#define OTP_CUST_AUTH_FAIL_NO_JTAG_SHIFT        5
#define OTP_CUST_AUTH_FAIL_NO_JTAG_MASK         (1 << OTP_CUST_AUTH_FAIL_NO_JTAG_SHIFT)

#define OTP_CUST_BTRM_BOOT_ENABLE_FUSE_ROW	0x0e
#define OTP_CUST_OP_INUSE_FUSE_ROW		0x0e
#define OTP_CUST_OP_MRKTID_FUSE_ROW    		0x14
#define OTP_CUST_MFG_MRKTID_FUSE_ROW   		0x14

/*
#####################################################################
# Memory Control Registers
#####################################################################
*/
#define MC_CSR_CNFG	0x0000
#define MC_CSR_CSST	0x0004
#define MC_CSR_CSEND	0x0008
#define MC_CSR_ROW00_0	0x0010
#define MC_CSR_ROW00_1	0x0014
#define MC_CSR_ROW01_0	0x0018
#define MC_CSR_ROW01_1	0x001c
/*
#define MC_CSR_ROW10_0	0x0020
#define MC_CSR_ROW10_1	0x0024
#define MC_CSR_ROW11_0	0x0028
#define MC_CSR_ROW11_1	0x002c
*/
#define MC_CSR_ROW20_0	0x0030
#define MC_CSR_ROW20_1	0x0034
#define MC_CSR_ROW21_0	0x0038
#define MC_CSR_ROW21_1	0x003c
/*
#define MC_CSR_ROW30_0  0x0040
#define MC_CSR_ROW30_1	0x0044
#define MC_CSR_ROW31_0	0x0048
#define MC_CSR_ROW31_1	0x004c
*/
#define MC_CSR_COL00_0	0x0050
#define MC_CSR_COL00_1  0x0054
#define MC_CSR_COL01_0	0x0058
#define MC_CSR_COL01_1	0x005c
/*
#define MC_CSR_COL10_0	0x0060
#define MC_CSR_COL10_1	0x0064
#define MC_CSR_COL11_0	0x0068
#define MC_CSR_COL11_1	0x006c
*/
#define MC_CSR_COL20_0	0x0070
#define MC_CSR_COL20_1	0x0074
#define MC_CSR_COL21_0	0x0078
#define MC_CSR_COL21_1	0x007c
/*
#define MC_CSR_COL30_0	0x0080
#define MC_CSR_COL30_1	0x0084
#define MC_CSR_COL31_0	0x0088
#define MC_CSR_COL31_1	0x008c
*/
#define MC_CSR_BNK10	0x0090
#define MC_CSR_BNK32	0x0094

#define MC_CSR_DCMD     0x0100
#define MC_CSR_DMODE_0	0x0104
#define MC_CSR_DMODE_2	0x0108

#define MC_CSR_CLKS	0x010c
   #define MC_CSR_CLKS_REFRESH_DISABLE    (1<<16)
   #define MC_CSR_CLKS_REFRESH_RATE_STRT  (8)
   #define MC_CSR_CLKS_REFRESH_RATE_MASK  (0xf<<MC_CSR_CLKS_REFRESH_RATE_STRT)
#define MC_CSR_ODT	0x0110
   #define MC_CSR_ODT_DYNODTEN_STRT 9
   #define MC_CSR_ODT_DYNODTEN_MASK (1<<MC_CSR_ODT_DYNODTEN_STRT)
#define MC_CSR_TIM1_0	0x0114
#define MC_CSR_TIM1_1	0x0118
#define	MC_CSR_TIM2	0x011c
#define MC_CSR_CTL_CRC         0x0120
#define MC_CSR_DOUT_CRC        0x0124
#define MC_CSR_DIN_CRC         0x0128
#define MC_CSR_CRC_CTRL        0x012c
   #define MC_CRC_CTRL_CRC_ENABLE_STRT      (0)
   #define MC_CRC_CTRL_CRC_ENABLE_MASK      (1<<MC_CRC_CTRL_CRC_ENABLE_STRT)
#define MC_CSR_CRC_CTRL        0x012c
#define MC_CSR_PHY_ST          0x0130
   #define MC_CSR_PHY_ST_PHY_RDY_MASK   (1<<4)
   #define MC_CSR_PHY_ST_SW_RESET_MASK  (1<<2)
   #define MC_CSR_PHY_ST_HW_RESET_MASK  (1<<1)
   #define MC_CSR_PHY_ST_POR_RDY_MASK   (1)
#define MC_CSR_DRAM_CFG	0x134
   #define MC_DRAM_CFG_SELF_REFRESH   (1<<11)
   #define MC_DRAM_CFG_2TADDRCMD      (1<<10)
  //   #define MC_DRAM_CFG_X32_MODE       (1<<5)
   #define MC_DRAM_CFG_DramType_Mask  (0xf)
   #define MC_DRAM_CFG_DDR2           (0)
   #define MC_DRAM_CFG_DDR3           (1)
#define MC_CSR_STAT	0x138
   #define MC_CSR_STAT_STAT_STRT   (0)
   #define MC_CSR_STAT_STAT_MASK   (0xf << MC_CSR_STAT_STAT_STRT)
   #define MC_CSR_STAT_ST_VDL_STRT (0)
   #define MC_CSR_STAT_ST_VDL_MASK (0x1 << MC_CSR_STAT_ST_VDL_STRT)
   #define MC_CSR_STAT_ST_ZQ_STRT  (1)
   #define MC_CSR_STAT_ST_ZQ_MASK  (0x1 << MC_CSR_STAT_ST_ZQ_STRT)
   #define MC_CSR_STAT_ST_PHYE_STRT  (2)
   #define MC_CSR_STAT_ST_PHYE_MASK  (0x1 << MC_CSR_STAT_ST_PHYE_STRT)
   #define MC_CSR_STAT_ST_VDL_STEPS_STRT (3)
   #define MC_CSR_STAT_ST_VDL_STEPS_MASK (0x1 << MC_CSR_STAT_ST_VDL_STEPS_STRT)
   #define MC_CSR_STAT_ST_VDL_RDEN_STRT (4)
   #define MC_CSR_STAT_ST_VDL_RDEN_MASK (0x1 << MC_CSR_STAT_ST_VDL_RDEN_STRT)
   #define MC_CSR_STAT_ST_VDL_BIT_STRT (5)
   #define MC_CSR_STAT_ST_VDL_BIT_MASK (0x1 << MC_CSR_STAT_ST_VDL_BIT_STRT)
   #define MC_CSR_STAT_ST_JEDEC_STRT (6)
   #define MC_CSR_STAT_ST_JEDEC_MASK (0x1 << MC_CSR_STAT_ST_JEDEC_STRT)
   #define MC_CSR_STAT_ERROR_STRT  (16)
   #define MC_CSR_STAT_ERROR_MASK  (0xf << MC_CSR_STAT_ERROR_STRT)
   #define MC_CSR_STAT_ERR_VDL_STRT (MC_CSR_STAT_ERROR_STRT)
   #define MC_CSR_STAT_ERR_VDL_MASK (0x1 << MC_CSR_STAT_ERR_VDL_STRT)
   #define MC_CSR_STAT_ERR_ZQ_STRT  (MC_CSR_STAT_ERROR_STRT+1)
   #define MC_CSR_STAT_ERR_ZQ_MASK  (0x1 << MC_CSR_STAT_ERR_ZQ_STRT)
   #define MC_CSR_STAT_ERR_PHYE_STRT  (MC_CSR_STAT_ERROR_STRT+2)
   #define MC_CSR_STAT_ERR_PHYE_MASK  (0x1 << MC_CSR_STAT_ERR_PHYE_STRT)
   #define MC_CSR_STAT_ERR_VDL_STEPS_STRT (MC_CSR_STAT_ERROR_STRT+3)
   #define MC_CSR_STAT_ERR_VDL_STEPS_MASK (0x1 << MC_CSR_STAT_ERR_VDL_STEPS_STRT)
   #define MC_CSR_STAT_ERR_VDL_RDEN_STRT (MC_CSR_STAT_ERROR_STRT+4)
   #define MC_CSR_STAT_ERR_VDL_RDEN_MASK (0x1 << MC_CSR_STAT_ERR_VDL_RDEN_STRT)
   #define MC_CSR_STAT_ERR_VDL_BIT_STRT (MC_CSR_STAT_ERROR_STRT+5)
   #define MC_CSR_STAT_ERR_VDL_BIT_MASK (0x1 << MC_CSR_STAT_ERR_VDL_BIT_STRT)
   #define MC_CSR_STAT_ERR_JEDEC_STRT (MC_CSR_STAT_ERROR_STRT+6)
   #define MC_CSR_STAT_ERR_JEDEC_MASK (0x1 << MC_CSR_STAT_ERR_JEDEC_STRT)


// 40nm PHY Defines

#define MC_CSR_PHY40_ADD  0x0200
#define MC_CSR_PHY40_WL0  0x0400
#define MC_CSR_PHY40_WL1  0x0600

#define PHY_CONTROL_REGS_REVISION                         0x0200
#define PHY_CONTROL_REGS_CLK_PM_CTRL                  	  0x0204
#define PHY_CONTROL_REGS_PLL_STATUS                  	  0x0210
   #define PHY_CONTROL_REGS_PLL_STATUS_LOCK_STRT          0
   #define PHY_CONTROL_REGS_PLL_STATUS_LOCK_MASK          1
   #define PHY_CONTROL_REGS_PLL_STATUS_STATUS_STRT        1
   #define PHY_CONTROL_REGS_PLL_STATUS_STATUS_MASK        (((1<<12)-1) << PHY_CONTROL_REGS_PLL_STATUS_STATUS_STRT)
   #define PHY_CONTROL_REGS_PLL_STATUS_4X_STRT            13
   #define PHY_CONTROL_REGS_PLL_STATUS_4X_MASK            (1<<PHY_CONTROL_REGS_PLL_STATUS_4X_STRT)
   #define PHY_CONTROL_REGS_PLL_STATUS_DDRMHZ_STRT        13
   #define PHY_CONTROL_REGS_PLL_STATUS_DDRMHZ_MASK        (((1<<12)-1) << PHY_CONTROL_REGS_PLL_STATUS_DDRMHZ_STRT)
   #define PHY_CONTROL_REGS_PLL_STATUS_LOCK_LOST_STRT     26
   #define PHY_CONTROL_REGS_PLL_STATUS_LOCK_LOST_MASK     (1<<PHY_CONTROL_REGS_PLL_STATUS_LOCK_LOST_STRT)
#define PHY_CONTROL_REGS_PLL_CONFIG                  	  0x0214
    #define PHY_CONTROL_REGS_PLL_CONFIG_PWRDN_STRT           0
    #define PHY_CONTROL_REGS_PLL_CONFIG_PWRDN_MASK           (1 << PHY_CONTROL_REGS_PLL_CONFIG_PWRDN_STRT)
    #define PHY_CONTROL_REGS_PLL_CONFIG_RESET_STRT           1
    #define PHY_CONTROL_REGS_PLL_CONFIG_RESET_MASK           (1 << PHY_CONTROL_REGS_PLL_CONFIG_RESET_STRT)
    #define PHY_CONTROL_REGS_PLL_CONFIG_LDO_PWRDN_STRT       2
    #define PHY_CONTROL_REGS_PLL_CONFIG_LDO_PWRDN_MASK       (1 << PHY_CONTROL_REGS_PLL_CONFIG_LDO_PWRDN_STRT)
    #define PHY_CONTROL_REGS_PLL_CONFIG_LDO_CTRL_STRT        3
    #define PHY_CONTROL_REGS_PLL_CONFIG_LDO_CTRL_MASK        (0x3 << PHY_CONTROL_REGS_PLL_CONFIG_LDO_CTRL_STRT)
    #define PHY_CONTROL_REGS_PLL_CONFIG_RESET_POST_DIV_STRT  5
    #define PHY_CONTROL_REGS_PLL_CONFIG_RESET_POST_DIV_MASK  (1 << PHY_CONTROL_REGS_PLL_CONFIG_RESET_POST_DIV_STRT)
#define PHY_CONTROL_REGS_PLL_CONTROL                  	  0x0218
#define PHY_CONTROL_REGS_PLL_DIVIDERS                  	  0x021c
    #define PHY_CONTROL_REGS_PLL_DIVIDERS_NDIV_STRT       0
    #define PHY_CONTROL_REGS_PLL_DIVIDERS_NDIV_MASK       (0xFF << PHY_CONTROL_REGS_PLL_DIVIDERS_NDIV_STRT)
    #define PHY_CONTROL_REGS_PLL_DIVIDERS_PDIV_STRT       8
    #define PHY_CONTROL_REGS_PLL_DIVIDERS_PDIV_MASK       (0x7 << PHY_CONTROL_REGS_PLL_DIVIDERS_PDIV_STRT)
    #define PHY_CONTROL_REGS_PLL_DIVIDERS_POST_DIV_STRT   11
    #define PHY_CONTROL_REGS_PLL_DIVIDERS_POST_DIV_MASK   (0x7 << PHY_CONTROL_REGS_PLL_DIVIDERS_POST_DIV_STRT)
#define PHY_CONTROL_REGS_AUX_CONTROL                      0x0220
#define PHY_CONTROL_REGS_VDL_OVRIDE_BYTE_CTL              0x0230
#define PHY_CONTROL_REGS_VDL_OVRIDE_BIT_CTL               0x0234
#define PHY_CONTROL_REGS_IDLE_PAD_CONTROL                 0x0238
#define PHY_CONTROL_REGS_ZQ_PVT_COMP_CTL                  0x023c
   #define PHY_CONTROL_REGS_ZQ_PVT_COMP_CTL_UPDATE_MODE_STRT   25
   #define PHY_CONTROL_REGS_ZQ_PVT_COMP_CTL_UPDATE_MODE_MASK   (1<<PHY_CONTROL_REGS_ZQ_PVT_COMP_CTL_UPDATE_MODE_STRT)
   #define ZQ_PVT_SAMPLE_EN                               0x100000
   #define ZQ_PVT_SAMPLE_DONE                             0x400000
   #define PHY_CONTROL_REGS_ZQ_PVT_COMP_CTL_UPDATE_MODE_STRT   25
   #define PHY_CONTROL_REGS_ZQ_PVT_COMP_CTL_UPDATE_MODE_MASK   (1<<PHY_CONTROL_REGS_ZQ_PVT_COMP_CTL_UPDATE_MODE_STRT)
   #define PHY_CONTROL_REGS_ZQ_PVT_COMP_CTL_ADDR_OVR_EN_STRT   19
   #define PHY_CONTROL_REGS_ZQ_PVT_COMP_CTL_ADDR_OVR_EN_MASK   (1<<PHY_CONTROL_REGS_ZQ_PVT_COMP_CTL_ADDR_OVR_EN_STRT)
   #define PHY_CONTROL_REGS_ZQ_PVT_COMP_CTL_DQ_OVR_EN_STRT   18
   #define PHY_CONTROL_REGS_ZQ_PVT_COMP_CTL_DQ_OVR_EN_MASK   (1<<PHY_CONTROL_REGS_ZQ_PVT_COMP_CTL_DQ_OVR_EN_STRT)
   #define PHY_CONTROL_REGS_ZQ_PVT_COMP_CTL_ADDR_PD_OVERRIDE_VAL_STRT   
   #define PHY_CONTROL_REGS_ZQ_PVT_COMP_CTL_ADDR_PD_OVERRIDE_VAL_MASK   (7<<PHY_CONTROL_REGS_ZQ_PVT_COMP_CTL_ADDR_PD_OVERRIDE_VAL_STRT)
   #define PHY_CONTROL_REGS_ZQ_PVT_COMP_CTL_ADDR_ND_OVERRIDE_VAL_STRT   
   #define PHY_CONTROL_REGS_ZQ_PVT_COMP_CTL_ADDR_ND_OVERRIDE_VAL_MASK   (7<<PHY_CONTROL_REGS_ZQ_PVT_COMP_CTL_ADDR_ND_OVERRIDE_VAL_STRT)
   #define PHY_CONTROL_REGS_ZQ_PVT_COMP_CTL_DQ_PD_OVERRIDE_VAL_STRT   
   #define PHY_CONTROL_REGS_ZQ_PVT_COMP_CTL_DQ_PD_OVERRIDE_VAL_MASK   (7<<PHY_CONTROL_REGS_ZQ_PVT_COMP_CTL_DQ_PD_OVERRIDE_VAL_STRT)
   #define PHY_CONTROL_REGS_ZQ_PVT_COMP_CTL_DQ_ND_OVERRIDE_VAL_STRT   
   #define PHY_CONTROL_REGS_ZQ_PVT_COMP_CTL_DQ_ND_OVERRIDE_VAL_MASK   (7<<PHY_CONTROL_REGS_ZQ_PVT_COMP_CTL_DQ_ND_OVERRIDE_VAL_STRT)
#define PHY_CONTROL_REGS_DRIVE_PAD_CTL                    0x0240
   #define PHY_CONTROL_REGS_DRIVE_PAD_CTL_G_DDR_STRT         0
   #define PHY_CONTROL_REGS_DRIVE_PAD_CTL_G_DDR_MASK         (1<<PHY_CONTROL_REGS_DRIVE_PAD_CTL_G_DDR_STRT)
   #define PHY_CONTROL_REGS_DRIVE_PAD_CTL_RT120B_G_STRT      1
   #define PHY_CONTROL_REGS_DRIVE_PAD_CTL_RT120B_G_MASK      (1<<PHY_CONTROL_REGS_DRIVE_PAD_CTL_RT120B_G_STRT)
   #define PHY_CONTROL_REGS_DRIVE_PAD_CTL_RT60B_STRT         2
   #define PHY_CONTROL_REGS_DRIVE_PAD_CTL_RT60B_MASK         (1<<PHY_CONTROL_REGS_DRIVE_PAD_CTL_RT60B_STRT)
   #define PHY_CONTROL_REGS_DRIVE_PAD_CTL_VDDO_VOLTS_STRT    3
   #define PHY_CONTROL_REGS_DRIVE_PAD_CTL_VDDO_VOLTS_MASK    (3<<PHY_CONTROL_REGS_DRIVE_PAD_CTL_VDDO_VOLTS_STRT)
   #define PHY_CONTROL_REGS_DRIVE_PAD_CTL_GDDR_SYMMETRY_STRT 5
   #define PHY_CONTROL_REGS_DRIVE_PAD_CTL_GDDR_SYMMETRY_MASK (1<<PHY_CONTROL_REGS_DRIVE_PAD_CTL_GDDR_SYMMETRY_STRT)
   #define PHY_CONTROL_REGS_DRIVE_PAD_CTL_HALF_STRENGTH_STRT 6
   #define PHY_CONTROL_REGS_DRIVE_PAD_CTL_HALF_STRENGTH_MASK (1<<PHY_CONTROL_REGS_DRIVE_PAD_CTL_HALF_STRENGTH_STRT)
   #define PHY_CONTROL_REGS_DRIVE_PAD_CTL_IDDQ_AUX_STRT      7
   #define PHY_CONTROL_REGS_DRIVE_PAD_CTL_IDDQ_AUX_MASK      (7<<PHY_CONTROL_REGS_DRIVE_PAD_CTL_IDDQ_AUX_STRT)
   #define PHY_CONTROL_REGS_DRIVE_PAD_CTL_IDDQ_A13_STRT      10
   #define PHY_CONTROL_REGS_DRIVE_PAD_CTL_IDDQ_A13_MASK      (1<<PHY_CONTROL_REGS_DRIVE_PAD_CTL_IDDQ_A13_STRT)
   #define PHY_CONTROL_REGS_DRIVE_PAD_CTL_IDDQ_A14_STRT      11
   #define PHY_CONTROL_REGS_DRIVE_PAD_CTL_IDDQ_A14_MASK      (1<<PHY_CONTROL_REGS_DRIVE_PAD_CTL_IDDQ_A14_STRT)
   #define PHY_CONTROL_REGS_DRIVE_PAD_CTL_AUTO_OEB_STRT      12
   #define PHY_CONTROL_REGS_DRIVE_PAD_CTL_AUTO_OEB_MASK      (1<<PHY_CONTROL_REGS_DRIVE_PAD_CTL_AUTO_OEB_STRT)
#define PHY_CONTROL_REGS_VDL_CALIBRATE                    0x248	// 0x0254
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_FAST_STRT       0       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_FAST_MASK       (1 << PHY_CONTROL_REGS_VDL_CALIBRATE_FAST_STRT)       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_ONCE_STRT       1       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_ONCE_MASK       (1 << PHY_CONTROL_REGS_VDL_CALIBRATE_ONCE_STRT)       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_ALWAYS_STRT     2       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_ALWAYS_MASK     (1 << PHY_CONTROL_REGS_VDL_CALIBRATE_ALWAYS_STRT)       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_TEST_STRT       3       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_TEST_MASK       (1 << PHY_CONTROL_REGS_VDL_CALIBRATE_TEST_STRT)       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_CLOCKS_STRT     4       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_CLOCKS_MASK     (1 << PHY_CONTROL_REGS_VDL_CALIBRATE_CLOCKS_STRT)       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_BYTE_STRT       5       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_BYTE_MASK       (1 << PHY_CONTROL_REGS_VDL_CALIBRATE_BYTE_STRT)       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_PHYBIST_STRT    6       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_PHYBIST_MASK    (1 << PHY_CONTROL_REGS_VDL_CALIBRATE_PHYBIST_STRT)       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_FTM_STRT        7       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_FTM_MASK        (1 << PHY_CONTROL_REGS_VDL_CALIBRATE_FTM_STRT)       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_AUTO_STRT       8       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_AUTO_MASK       (1 << PHY_CONTROL_REGS_VDL_CALIBRATE_AUTO_STRT)       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_STEPS_STRT      9       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_STEPS_MASK      (1 << PHY_CONTROL_REGS_VDL_CALIBRATE_STEPS_STRT)       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_DQS_PAIR_STRT   10      
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_DQS_PAIR_MASK   (1 << PHY_CONTROL_REGS_VDL_CALIBRATE_DQS_PAIR_STRT)       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_CALIB_BIT_OFST_STRT 12       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_CALIB_BIT_OFST_MASK (0x3f << PHY_CONTROL_REGS_VDL_CALIBRATE_CALIB_BIT_OFST_STRT)       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_RD_EN_CAL_STRT  18      
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_RD_EN_CAL_MASK  (1 << PHY_CONTROL_REGS_VDL_CALIBRATE_RD_EN_CAL_STRT)
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_BIT_CAL_STRT     19      
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_BIT_CAL_MASK    (1 << PHY_CONTROL_REGS_VDL_CALIBRATE_BIT_CAL_STRT)
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_SET_MR_MPR_STRT 20       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_SET_MR_MPR_MASK (1 << PHY_CONTROL_REGS_VDL_CALIBRATE_SET_MR_MPR_STRT)
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_DQ0_ONLY_STRT   21
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_DQ0_ONLY_MASK   (1 << PHY_CONTROL_REGS_VDL_CALIBRATE_DQ0_ONLY_STRT) 
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_SET_WR_DQ_STRT  22       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_SET_WR_DQ_MASK  (1 << PHY_CONTROL_REGS_VDL_CALIBRATE_SET_WR_DQ_STRT)
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_BIT_REFRESH_STRT 23
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_BIT_REFRESH_MASK (1 << PHY_CONTROL_REGS_VDL_CALIBRATE_BIT_REFRESH_STRT)
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_RD_DLY_CAL_STRT  24       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_RD_DLY_CAL_MASK  (1 << PHY_CONTROL_REGS_VDL_CALIBRATE_RD_DLY_CAL_STRT)
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_EXIT_IN_SR_STRT  25       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_EXIT_IN_SR_MASK  (1 << PHY_CONTROL_REGS_VDL_CALIBRATE_EXIT_IN_SR_STRT)
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_SKIP_RST_STRT  26       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_SKIP_RST_MASK  (1 << PHY_CONTROL_REGS_VDL_CALIBRATE_SKIP_RST_STRT)
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_AUTO_INIT_STRT   27       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_AUTO_INIT_MASK   (1 << PHY_CONTROL_REGS_VDL_CALIBRATE_AUTO_INIT_STRT)
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_USE_STRAPS_STRT  28       
   #define PHY_CONTROL_REGS_VDL_CALIBRATE_USE_STRAPS_MASK  (1 << PHY_CONTROL_REGS_VDL_CALIBRATE_USE_STRAPS_STRT)
#define PHY_CONTROL_REGS_VDL_CALIB_STATUS                 0x024C	// 0x0258
   #define PHY_CONTROL_REGS_VDL_CALIB_STATUS_IDLE_STRT    0
   #define PHY_CONTROL_REGS_VDL_CALIB_STATUS_IDLE_MASK    (1 << PHY_CONTROL_REGS_VDL_CALIB_STATUS_IDLE_STRT)
   #define PHY_CONTROL_REGS_VDL_CALIB_STATUS_LOCK_STRT    1
   #define PHY_CONTROL_REGS_VDL_CALIB_STATUS_LOCK_MASK    (1 << PHY_CONTROL_REGS_VDL_CALIB_STATUS_LOCK_STRT)
   #define PHY_CONTROL_REGS_VDL_CALIB_STATUS_TOTAL_STRT   2
   #define PHY_CONTROL_REGS_VDL_CALIB_STATUS_TOTAL_MASK   (0x3FF << PHY_CONTROL_REGS_VDL_CALIB_STATUS_TOTAL_STRT)
   #define PHY_CONTROL_REGS_VDL_CALIB_STATUS_BIT_OFST_STRT 12
   #define PHY_CONTROL_REGS_VDL_CALIB_STATUS_BIT_OFST_MASK (0x3F << PHY_CONTROL_REGS_VDL_CALIB_STATUS_BIT_OFST_STRT)
   #define PHY_CONTROL_REGS_VDL_CALIB_STATUS_BYTESEL_STRT 18
   #define PHY_CONTROL_REGS_VDL_CALIB_STATUS_BYTESEL_MASK (1 << PHY_CONTROL_REGS_VDL_CALIB_STATUS_BYTESEL_STRT)
   #define PHY_CONTROL_REGS_VDL_CALIB_STATUS_BYTE_ERROR_STRT 19
   #define PHY_CONTROL_REGS_VDL_CALIB_STATUS_BYTE_ERROR_MASK (0xF << PHY_CONTROL_REGS_VDL_CALIB_STATUS_BYTE_ERROR_STRT)
   #define PHY_CONTROL_REGS_VDL_CALIB_STATUS_READ_EN_ERROR_STRT 23
   #define PHY_CONTROL_REGS_VDL_CALIB_STATUS_READ_EN_ERROR_MASK (0xF << PHY_CONTROL_REGS_VDL_CALIB_STATUS_READ_EN_ERROR_STRT)
   #define PHY_CONTROL_REGS_VDL_CALIB_STATUS_RD_DATA_DLY_ERROR_STRT 27
   #define PHY_CONTROL_REGS_VDL_CALIB_STATUS_RD_DATA_DLY_ERROR_MASK (0xF << PHY_CONTROL_REGS_VDL_CALIB_STATUS_RD_DATA_DLY_ERROR_STRT)
   #define PHY_CONTROL_REGS_VDL_CALIB_STATUS_AUTO_INIT_DONE_STRT 28
   #define PHY_CONTROL_REGS_VDL_CALIB_STATUS_AUTO_INIT_DONE_MASK (1 << PHY_CONTROL_REGS_VDL_CALIB_STATUS_AUTO_INIT_DONE_STRT)
   #define PHY_CONTROL_REGS_VDL_CALIB_STATUS_AUTO_INIT_FAIL_STRT 29
   #define PHY_CONTROL_REGS_VDL_CALIB_STATUS_AUTO_INIT_FAIL_MASK (1 << PHY_CONTROL_REGS_VDL_CALIB_STATUS_AUTO_INIT_FAIL_STRT)
#define PHY_CONTROL_REGS_VDL_DQ_CALIB_STATUS		0x0250
#define PHY_CONTROL_REGS_VDL_WR_CHAN_CALIB_STATUS	0x0254
#define PHY_CONTROL_REGS_VDL_RD_EN_CALIB_STATUS		0x0258
#define PHY_CONTROL_REGS_VIRTUAL_VTT_CONTROL              0x025c
   #define PHY_CONTROL_REGS_VIRTUAL_VTT_CONTROL_ENABLE_CKE_IDLE_STRT 0
   #define PHY_CONTROL_REGS_VIRTUAL_VTT_CONTROL_ENABLE_CKE_IDLE_MASK (1 << PHY_CONTROL_REGS_VIRTUAL_VTT_CONTROL_ENABLE_CKE_IDLE_STRT)
   #define PHY_CONTROL_REGS_VIRTUAL_VTT_CONTROL_ENABLE_CS_IDLE_STRT 1
   #define PHY_CONTROL_REGS_VIRTUAL_VTT_CONTROL_ENABLE_CS_IDLE_MASK (1 << PHY_CONTROL_REGS_VIRTUAL_VTT_CONTROL_ENABLE_CS_IDLE_STRT)
   #define PHY_CONTROL_REGS_VIRTUAL_VTT_CONTROL_ENABLE_CTL_IDLE_STRT 2
   #define PHY_CONTROL_REGS_VIRTUAL_VTT_CONTROL_ENABLE_CTL_IDLE_MASK (1 << PHY_CONTROL_REGS_VIRTUAL_VTT_CONTROL_ENABLE_CTL_IDLE_STRT)
   #define PHY_CONTROL_REGS_VIRTUAL_VTT_CONTROL_ENABLE_ERROR_RESET_STRT 3 
   #define PHY_CONTROL_REGS_VIRTUAL_VTT_CONTROL_ENABLE_ERROR_RESET_MASK (1 << PHY_CONTROL_REGS_VIRTUAL_VTT_CONTROL_ENABLE_ERROR_RESET_STRT)
#define PHY_CONTROL_REGS_VIRTUAL_VTT_STATUS               0x0260
#define PHY_CONTROL_REGS_VIRTUAL_VTT_CONNECTIONS          0x0264
#define PHY_CONTROL_REGS_VIRTUAL_VTT_OVERRIDE             0x0268
#define PHY_CONTROL_REGS_VREF_DAC_CONTROL                 0x026c
#define PHY_CONTROL_REGS_PHYBIST_CNTRL                    0x0270
  #define PHY_CONTROL_REGS_PHYBIST_CNTRL_ENABLE     (1<<0)
  #define PHY_CONTROL_REGS_PHYBIST_CNTRL_LPBK       (1<<1)
  #define PHY_CONTROL_REGS_PHYBIST_CNTRL_FCTL       (1<<2)
  #define PHY_CONTROL_REGS_PHYBIST_CNTRL_FDAT       (1<<3)
  #define PHY_CONTROL_REGS_PHYBIST_CNTRL_FORCE_ODT  (1<<4)
#define PHY_CONTROL_REGS_PHYBIST_SEED                  	  0x0274
#define PHY_CONTROL_REGS_PHYBIST_STATUS                   0x0278
  #define PHY_CONTROL_REGS_PHYBIST_STATUS_DAT_PASS  (1<<3)
  #define PHY_CONTROL_REGS_PHYBIST_STATUS_CTL_PASS  (1<<2)
  #define PHY_CONTROL_REGS_PHYBIST_STATUS_DAT_DONE  (1<<1)
  #define PHY_CONTROL_REGS_PHYBIST_STATUS_CTL_DONE  (1<<0)
#define PHY_CONTROL_REGS_PHYBIST_CTL_STATUS               0x027c
#define PHY_CONTROL_REGS_PHYBIST_DQ_STATUS                0x0280
#define PHY_CONTROL_REGS_PHYBIST_MISC_STATUS              0x0284
#define PHY_CONTROL_REGS_COMMAND_REG                      0x0290
#define PHY_CONTROL_REGS_MODE_REG0                        0x0294
#define PHY_CONTROL_REGS_MODE_REG1                        0x0298
#define PHY_CONTROL_REGS_MODE_REG2                        0x029c
#define PHY_CONTROL_REGS_MODE_REG3                        0x02a0
#define PHY_CONTROL_REGS_STANDBY_CONTROL                  0x02a4
#define PHY_CONTROL_REGS_STRAP_CONTROL                    0x02B0 	// 0x0224
    #define PHY_CONTROL_REGS_STRAP_CONTROL_STRAPS_VLD_STRT 0
    #define PHY_CONTROL_REGS_STRAP_CONTROL_JEDEC_TYPE_STRT 1
    #define PHY_CONTROL_REGS_STRAP_CONTROL_JEDEC_TYPE_MASK (0x1F << PHY_CONTROL_REGS_STRAP_CONTROL_JEDEC_TYPE_STRT)
    #define PHY_CONTROL_REGS_STRAP_CONTROL_CHIP_SIZE_STRT  6
    #define PHY_CONTROL_REGS_STRAP_CONTROL_CHIP_SIZE_MASK  (0x3 << PHY_CONTROL_REGS_STRAP_CONTROL_CHIP_SIZE_STRT)
    #define PHY_CONTROL_REGS_STRAP_CONTROL_VDDQ_STRT       8
    #define PHY_CONTROL_REGS_STRAP_CONTROL_VDDQ_MASK       (0x3 << PHY_CONTROL_REGS_STRAP_CONTROL_VDDQ_STRT)
    #define PHY_CONTROL_REGS_STRAP_CONTROL_CHIP_WIDTH_STRT 10
    #define PHY_CONTROL_REGS_STRAP_CONTROL_CHIP_WIDTH_MASK (1 << PHY_CONTROL_REGS_STRAP_CONTROL_CHIP_WIDTH_STRT)
    #define PHY_CONTROL_REGS_STRAP_CONTROL_BUS8_STRT       11
    #define PHY_CONTROL_REGS_STRAP_CONTROL_BUS8_MASK       (1 << PHY_CONTROL_REGS_STRAP_CONTROL_BUS8_STRT)
    #define PHY_CONTROL_REGS_STRAP_CONTROL_BUS16_STRT      12
    #define PHY_CONTROL_REGS_STRAP_CONTROL_BUS16_MASK      (1 << PHY_CONTROL_REGS_STRAP_CONTROL_BUS16_STRT)
    #define PHY_CONTROL_REGS_STRAP_CONTROL_DUAL_RANK_STRT  13
    #define PHY_CONTROL_REGS_STRAP_CONTROL_DUAL_RANK_MASK  (1 << PHY_CONTROL_REGS_STRAP_CONTROL_DUAL_RANK_STRT)
    #define PHY_CONTROL_REGS_STRAP_CONTROL_AD_WIDTH_STRT   14
    #define PHY_CONTROL_REGS_STRAP_CONTROL_AD_WIDTH_MASK   (0x3 << PHY_CONTROL_REGS_STRAP_CONTROL_AD_WIDTH_STRT)
    #define PHY_CONTROL_REGS_STRAP_CONTROL_MHZ_STRT        16
    #define PHY_CONTROL_REGS_STRAP_CONTROL_MHZ_MASK        (0xFFF << PHY_CONTROL_REGS_STRAP_CONTROL_MHZ_STRT)
	#define GPIO_STRAP_PIN_STRT 							43
#define PHY_CONTROL_REGS_STRAP_CONTROL2                   0x02B4
    #define PHY_CONTROL_REGS_STRAP_CONTROL2_CL_STRT       0
    #define PHY_CONTROL_REGS_STRAP_CONTROL2_CL_MASK       (0x7f << PHY_CONTROL_REGS_STRAP_CONTROL2_CL_STRT)
    #define PHY_CONTROL_REGS_STRAP_CONTROL2_CWL_STRT      7
    #define PHY_CONTROL_REGS_STRAP_CONTROL2_CWL_MASK      (0x1f << PHY_CONTROL_REGS_STRAP_CONTROL2_CWL_STRT)
    #define PHY_CONTROL_REGS_STRAP_CONTROL2_WR_STRT       12
    #define PHY_CONTROL_REGS_STRAP_CONTROL2_WR_MASK       (0x1f << PHY_CONTROL_REGS_STRAP_CONTROL2_WR_STRT)
    #define PHY_CONTROL_REGS_STRAP_CONTROL2_AL_STRT       17
    #define PHY_CONTROL_REGS_STRAP_CONTROL2_AL_MASK       (0x7 << PHY_CONTROL_REGS_STRAP_CONTROL2_AL_STRT)
    #define PHY_CONTROL_REGS_STRAP_CONTROL2_DDR3_STRT     20
    #define PHY_CONTROL_REGS_STRAP_CONTROL2_DDR3_MASK     (0x1 << PHY_CONTROL_REGS_STRAP_CONTROL2_DDR3_STRT)
#define PHY_CONTROL_REGS_STRAP_STATUS                     0x02B8	// 0x0228
    #define PHY_CONTROL_REGS_STRAP_STATUS_STRAPS_VLD_STRT 0
    #define PHY_CONTROL_REGS_STRAP_STATUS_STRAPS_VLD_MASK 1
    #define PHY_CONTROL_REGS_STRAP_STATUS_JEDEC_TYPE_STRT 1
    #define PHY_CONTROL_REGS_STRAP_STATUS_JEDEC_TYPE_MASK (0x1F << PHY_CONTROL_REGS_STRAP_STATUS_JEDEC_TYPE_STRT)
    #define PHY_CONTROL_REGS_STRAP_STATUS_SPEED_LO_STRT   6
    #define PHY_CONTROL_REGS_STRAP_STATUS_SPEED_LO_MASK   (0x3 << PHY_CONTROL_REGS_STRAP_STATUS_SPEED_LO_STRT)
    #define PHY_CONTROL_REGS_STRAP_STATUS_SPEED_HI_STRT   10
    #define PHY_CONTROL_REGS_STRAP_STATUS_SPEED_HI_MASK   (1 << PHY_CONTROL_REGS_STRAP_STATUS_SPEED_HI_STRT)
    #define PHY_CONTROL_REGS_STRAP_STATUS_CHIP_SIZE_STRT  6
    #define PHY_CONTROL_REGS_STRAP_STATUS_CHIP_SIZE_MASK  (0x3 << PHY_CONTROL_REGS_STRAP_STATUS_CHIP_SIZE_STRT)
    #define PHY_CONTROL_REGS_STRAP_STATUS_VDDQ_STRT       8
    #define PHY_CONTROL_REGS_STRAP_STATUS_VDDQ_MASK       (0x3 << PHY_CONTROL_REGS_STRAP_STATUS_VDDQ_STRT)
    #define PHY_CONTROL_REGS_STRAP_STATUS_CHIP_WIDTH_STRT 10
    #define PHY_CONTROL_REGS_STRAP_STATUS_CHIP_WIDTH_MASK   (1 << PHY_CONTROL_REGS_STRAP_STATUS_CHIP_WIDTH_STRT)
    #define PHY_CONTROL_REGS_STRAP_STATUS_BUS8_STRT       11
    #define PHY_CONTROL_REGS_STRAP_STATUS_BUS8_MASK       (1 << PHY_CONTROL_REGS_STRAP_STATUS_BUS8_STRT)
    #define PHY_CONTROL_REGS_STRAP_STATUS_BUS16_STRT      12
    #define PHY_CONTROL_REGS_STRAP_STATUS_BUS16_MASK      (1 << PHY_CONTROL_REGS_STRAP_STATUS_BUS16_STRT)
    #define PHY_CONTROL_REGS_STRAP_STATUS_DUAL_RANK_STRT  13
    #define PHY_CONTROL_REGS_STRAP_STATUS_DUAL_RANK_MASK   (1 << PHY_CONTROL_REGS_STRAP_STATUS_DUAL_RANK_STRT)
    #define PHY_CONTROL_REGS_STRAP_STATUS_AD_WIDTH_STRT   14
    #define PHY_CONTROL_REGS_STRAP_STATUS_AD_WIDTH_MASK   (0x3 << PHY_CONTROL_REGS_STRAP_STATUS_AD_WIDTH_STRT)
    #define PHY_CONTROL_REGS_STRAP_STATUS_MHZ_STRT        16
    #define PHY_CONTROL_REGS_STRAP_STATUS_MHZ_MASK        (0xFFF << PHY_CONTROL_REGS_STRAP_STATUS_MHZ_STRT)
    #define PHY_CONTROL_REGS_STRAP_STATUS_FROM_MEMC_STRT  28
    #define PHY_CONTROL_REGS_STRAP_STATUS_FROM_MEMC_MASK  (1 << PHY_CONTROL_REGS_STRAP_STATUS_FROM_MEMC_STRT)
    #define PHY_CONTROL_REGS_STRAP_STATUS_FROM_REG_STRT   29
    #define PHY_CONTROL_REGS_STRAP_STATUS_FROM_REG_MASK   (1 << PHY_CONTROL_REGS_STRAP_STATUS_FROM_REG_STRT)
#define PHY_CONTROL_REGS_STRAP_STATUS2                    0x02BC	// 0x0228
#define PHY_CONTROL_REGS_DEBUG_FREEZE_ENABLE              0x02C0

#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE_RD_EN             0x0400
   #define PHY_WORD_LANE_VDL_OVRIDE_STEP_STRT             0
   #define PHY_WORD_LANE_VDL_OVRIDE_STEP_MASK             (0x3F)
   #define PHY_WORD_LANE_VDL_OVRIDE_BYTE_SEL_STRT         8
   #define PHY_WORD_LANE_VDL_OVRIDE_BYTE_SEL_MASK         (1 << PHY_WORD_LANE_VDL_OVRIDE_BYTE_SEL_STRT)
   #define PHY_WORD_LANE_VDL_OVRIDE_OVR_EN_STRT           16
   #define PHY_WORD_LANE_VDL_OVRIDE_OVR_EN_MASK           (1 << PHY_WORD_LANE_VDL_OVRIDE_OVR_EN_STRT)
   #define PHY_WORD_LANE_VDL_OVRIDE_OVR_FORCE_STRT        17
   #define PHY_WORD_LANE_VDL_OVRIDE_OVR_FORCE_MASK        (1 << PHY_WORD_LANE_VDL_OVRIDE_OVR_FORCE_STRT)
   #define PHY_WORD_LANE_VDL_OVRIDE_BUSY_STRT             31
   #define PHY_WORD_LANE_VDL_OVRIDE_BUSY_MASK             (1 << PHY_WORD_LANE_VDL_OVRIDE_BUSY_STRT)
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE0_W                0x0404
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE0_R_P              0x0408
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE0_R_N              0x040c
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE0_BIT0_W           0x0410
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE0_BIT1_W           0x0414
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE0_BIT2_W           0x0418
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE0_BIT3_W           0x041c
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE0_BIT4_W           0x0420
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE0_BIT5_W           0x0424
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE0_BIT6_W           0x0428
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE0_BIT7_W           0x042c
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE0_DM_W             0x0430
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE0_BIT0_R_P         0x0434
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE0_BIT0_R_N         0x0438
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE0_BIT1_R_P         0x043c
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE0_BIT1_R_N         0x0440
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE0_BIT2_R_P         0x0444
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE0_BIT2_R_N         0x0448
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE0_BIT3_R_P         0x044c
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE0_BIT3_R_N         0x0450
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE0_BIT4_R_P         0x0454
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE0_BIT4_R_N         0x0458
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE0_BIT5_R_P         0x045c
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE0_BIT5_R_N         0x0460
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE0_BIT6_R_P         0x0464
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE0_BIT6_R_N         0x0468
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE0_BIT7_R_P         0x046c
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE0_BIT7_R_N         0x0470
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE0_BIT_RD_EN        0x0474
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE1_W                0x04a4
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE1_R_P              0x04a8
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE1_R_N              0x04ac
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE1_BIT0_W           0x04b0
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE1_BIT1_W           0x04b4
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE1_BIT2_W           0x04b8
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE1_BIT3_W           0x04bc
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE1_BIT4_W           0x04c0
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE1_BIT5_W           0x04c4
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE1_BIT6_W           0x04c8
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE1_BIT7_W           0x04cc
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE1_DM_W             0x04d0
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE1_BIT0_R_P         0x04d4
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE1_BIT0_R_N         0x04d8
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE1_BIT1_R_P         0x04dc
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE1_BIT1_R_N         0x04e0
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE1_BIT2_R_P         0x04e4
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE1_BIT2_R_N         0x04e8
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE1_BIT3_R_P         0x04ec
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE1_BIT3_R_N         0x04f0
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE1_BIT4_R_P         0x04f4
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE1_BIT4_R_N         0x04f8
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE1_BIT5_R_P         0x04fc
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE1_BIT5_R_N         0x0500
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE1_BIT6_R_P         0x0504
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE1_BIT6_R_N         0x0508
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE1_BIT7_R_P         0x050c
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE1_BIT7_R_N         0x0510
#define PHY_WORD_LANE_0_VDL_OVRIDE_BYTE1_BIT_RD_EN        0x0514
#define PHY_WORD_LANE_0_DYN_VDL_OVRIDE_BYTE0_RD_EN        0x0520
#define PHY_WORD_LANE_0_DYN_VDL_OVRIDE_BYTE0_BIT_RD_EN    0x0524
#define PHY_WORD_LANE_0_DYN_VDL_OVRIDE_BYTE0_R_P          0x0528
#define PHY_WORD_LANE_0_DYN_VDL_OVRIDE_BYTE0_R_N          0x052c
#define PHY_WORD_LANE_0_DYN_VDL_OVRIDE_BYTE0_BIT_R_P      0x0530
#define PHY_WORD_LANE_0_DYN_VDL_OVRIDE_BYTE0_BIT_R_N      0x0534
#define PHY_WORD_LANE_0_DYN_VDL_OVRIDE_BYTE0_W            0x0538
#define PHY_WORD_LANE_0_DYN_VDL_OVRIDE_BYTE0_BIT_W        0x053c
#define PHY_WORD_LANE_0_DYN_VDL_OVRIDE_BYTE1_RD_EN        0x0540
#define PHY_WORD_LANE_0_DYN_VDL_OVRIDE_BYTE1_BIT_RD_EN    0x0544
#define PHY_WORD_LANE_0_DYN_VDL_OVRIDE_BYTE1_R_P          0x0548
#define PHY_WORD_LANE_0_DYN_VDL_OVRIDE_BYTE1_R_N          0x054c
#define PHY_WORD_LANE_0_DYN_VDL_OVRIDE_BYTE1_BIT_R_P      0x0550
#define PHY_WORD_LANE_0_DYN_VDL_OVRIDE_BYTE1_BIT_R_N      0x0554
#define PHY_WORD_LANE_0_DYN_VDL_OVRIDE_BYTE1_W            0x0558
#define PHY_WORD_LANE_0_DYN_VDL_OVRIDE_BYTE1_BIT_W        0x055c
#define PHY_WORD_LANE_0_READ_DATA_DLY                     0x0560
#define PHY_WORD_LANE_0_READ_CONTROL                      0x0564
   #define PHY_WORD_LANE_0_READ_CONTROL_DQ_ODT_LE_ADJ_STRT	0
   #define PHY_WORD_LANE_0_READ_CONTROL_DQ_ODT_LE_ADJ_MASK	(1<<PHY_WORD_LANE_0_READ_CONTROL_DQ_ODT_LE_ADJ_STRT)
   #define PHY_WORD_LANE_0_READ_CONTROL_DQ_ODT_TE_ADJ_STRT	1
   #define PHY_WORD_LANE_0_READ_CONTROL_DQ_ODT_TE_ADJ_MASK	(1<<PHY_WORD_LANE_0_READ_CONTROL_DQ_ODT_TE_ADJ_STRT)
   #define PHY_WORD_LANE_0_READ_CONTROL_DQ_ODT_ENABLE_STRT	2
   #define PHY_WORD_LANE_0_READ_CONTROL_DQ_ODT_ENABLE_MASK      (1<<PHY_WORD_LANE_0_READ_CONTROL_DQ_ODT_ENABLE_STRT)
#define PHY_WORD_LANE_0_READ_FIFO_DATA_BL0_0              0x0570
#define PHY_WORD_LANE_0_READ_FIFO_DATA_BL0_1              0x0574
#define PHY_WORD_LANE_0_READ_FIFO_DATA_BL0_2              0x0578
#define PHY_WORD_LANE_0_READ_FIFO_DATA_BL0_3              0x057c
#define PHY_WORD_LANE_0_READ_FIFO_DATA_BL1_0              0x0580
#define PHY_WORD_LANE_0_READ_FIFO_DATA_BL1_1              0x0584
#define PHY_WORD_LANE_0_READ_FIFO_DATA_BL1_2              0x0588
#define PHY_WORD_LANE_0_READ_FIFO_DATA_BL1_3              0x058c
#define PHY_WORD_LANE_0_READ_FIFO_STATUS                  0x0590
#define PHY_WORD_LANE_0_READ_FIFO_CLEAR                   0x0594
#define PHY_WORD_LANE_0_IDLE_PAD_CONTROL                  0x05a0
#define PHY_WORD_LANE_0_DRIVE_PAD_CTL                  	  0x05a4
   #define PHY_WORD_LANE_0_DRIVE_PAD_CTL_G_DDR_STRT            0
   #define PHY_WORD_LANE_0_DRIVE_PAD_CTL_G_DDR_MASK            (1<<PHY_WORD_LANE_0_DRIVE_PAD_CTL_G_DDR_STRT)
   #define PHY_WORD_LANE_0_DRIVE_PAD_CTL_RT120B_G_STRT         1
   #define PHY_WORD_LANE_0_DRIVE_PAD_CTL_RT120B_G_MASK         (1<<PHY_WORD_LANE_0_DRIVE_PAD_CTL_RT120B_G_STRT)
   #define PHY_WORD_LANE_0_DRIVE_PAD_CTL_RT60B_STRT            2
   #define PHY_WORD_LANE_0_DRIVE_PAD_CTL_RT60B_MASK            (1<<PHY_WORD_LANE_0_DRIVE_PAD_CTL_RT60B_STRT)
   #define PHY_WORD_LANE_0_DRIVE_PAD_CTL_VDDO_VOLTS_STRT       3
   #define PHY_WORD_LANE_0_DRIVE_PAD_CTL_VDDO_VOLTS_MASK       (3<<PHY_WORD_LANE_0_DRIVE_PAD_CTL_VDDO_VOLTS_STRT)
   #define PHY_WORD_LANE_0_DRIVE_PAD_CTL_GDDR_SYMMETRY_STRT    5
   #define PHY_WORD_LANE_0_DRIVE_PAD_CTL_GDDR_SYMMETRY_MASK    (1<<PHY_WORD_LANE_0_DRIVE_PAD_CTL_GDDR_SYMMETRY_STRT)
   #define PHY_WORD_LANE_0_DRIVE_PAD_CTL_RDQS_EN_STRT          6
   #define PHY_WORD_LANE_0_DRIVE_PAD_CTL_RDQS_EN_MASK          (1<<PHY_WORD_LANE_0_DRIVE_PAD_CTL_RDQS_EN_STRT)
   #define PHY_WORD_LANE_0_DRIVE_PAD_CTL_HALF_STRENGTH_STRT    7
   #define PHY_WORD_LANE_0_DRIVE_PAD_CTL_HALF_STRENGTH_MASK    (1<<PHY_WORD_LANE_0_DRIVE_PAD_CTL_HALF_STRENGTH_STRT)
   #define PHY_WORD_LANE_0_DRIVE_PAD_CTL_HALF_STRENGTH_CK_STRT 8
   #define PHY_WORD_LANE_0_DRIVE_PAD_CTL_HALF_STRENGTH_CK_MASK (1<<PHY_WORD_LANE_0_DRIVE_PAD_CTL_HALF_STRENGTH_CK_STRT)
   #define PHY_WORD_LANE_0_DRIVE_PAD_CTL_DQS_TX_DIS_STRT       9
   #define PHY_WORD_LANE_0_DRIVE_PAD_CTL_DQS_TX_DIS_MASK       (1<<PHY_WORD_LANE_0_DRIVE_PAD_CTL_DQS_TX_DIS_STRT)
   #define PHY_WORD_LANE_0_DRIVE_PAD_CTL_DQS_ALWAYS_ON_STRT    10
   #define PHY_WORD_LANE_0_DRIVE_PAD_CTL_DQS_ALWAYS_ON_MASK    (1<<PHY_WORD_LANE_0_DRIVE_PAD_CTL_DQS_ALWAYS_ON_STRT)
#define PHY_WORD_LANE_0_CLOCK_PAD_DISABLE                 0x05a8
#define PHY_WORD_LANE_0_WR_PREAMBLE_MODE                  0x05ac

#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE_RD_EN 0x00000600 /* Read Enable Byte VDL static override control register */
   #define PHY_WORD_LANE_VDL_OVRIDE_STEP_STRT             0
   #define PHY_WORD_LANE_VDL_OVRIDE_STEP_MASK             (0x3F)
   #define PHY_WORD_LANE_VDL_OVRIDE_BYTE_SEL_STRT         8
   #define PHY_WORD_LANE_VDL_OVRIDE_BYTE_SEL_MASK         (1 << PHY_WORD_LANE_VDL_OVRIDE_BYTE_SEL_STRT)
   #define PHY_WORD_LANE_VDL_OVRIDE_OVR_EN_STRT           16
   #define PHY_WORD_LANE_VDL_OVRIDE_OVR_EN_MASK           (1 << PHY_WORD_LANE_VDL_OVRIDE_OVR_EN_STRT)
   #define PHY_WORD_LANE_VDL_OVRIDE_OVR_FORCE_STRT        17
   #define PHY_WORD_LANE_VDL_OVRIDE_OVR_FORCE_MASK        (1 << PHY_WORD_LANE_VDL_OVRIDE_OVR_FORCE_STRT)
   #define PHY_WORD_LANE_VDL_OVRIDE_BUSY_STRT             31
   #define PHY_WORD_LANE_VDL_OVRIDE_BUSY_MASK             (1 << PHY_WORD_LANE_VDL_OVRIDE_BUSY_STRT)

#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE0_W 0x00000604 /* Write Byte VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE0_R_P 0x00000608 /* Read Byte DQSP VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE0_R_N 0x0000060c /* Read Byte DQSN VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE0_BIT0_W 0x00000610 /* Write Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE0_BIT1_W 0x00000614 /* Write Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE0_BIT2_W 0x00000618 /* Write Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE0_BIT3_W 0x0000061c /* Write Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE0_BIT4_W 0x00000620 /* Write Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE0_BIT5_W 0x00000624 /* Write Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE0_BIT6_W 0x00000628 /* Write Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE0_BIT7_W 0x0000062c /* Write Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE0_DM_W 0x00000630 /* Write Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE0_BIT0_R_P 0x00000634 /* Read DQSP Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE0_BIT0_R_N 0x00000638 /* Read DQSN Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE0_BIT1_R_P 0x0000063c /* Read DQSP Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE0_BIT1_R_N 0x00000640 /* Read DQSN Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE0_BIT2_R_P 0x00000644 /* Read DQSP Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE0_BIT2_R_N 0x00000648 /* Read DQSN Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE0_BIT3_R_P 0x0000064c /* Read DQSP Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE0_BIT3_R_N 0x00000650 /* Read DQSN Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE0_BIT4_R_P 0x00000654 /* Read DQSP Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE0_BIT4_R_N 0x00000658 /* Read DQSN Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE0_BIT5_R_P 0x0000065c /* Read DQSP Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE0_BIT5_R_N 0x00000660 /* Read DQSN Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE0_BIT6_R_P 0x00000664 /* Read DQSP Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE0_BIT6_R_N 0x00000668 /* Read DQSN Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE0_BIT7_R_P 0x0000066c /* Read DQSP Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE0_BIT7_R_N 0x00000670 /* Read DQSN Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE0_BIT_RD_EN 0x00000674 /* Read Enable Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_RD_EN 0x000006a0 /* Read Enable Byte VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_W 0x000006a4 /* Write Byte VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_R_P 0x000006a8 /* Read Byte DQSP VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_R_N 0x000006ac /* Read Byte DQSN VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_BIT0_W 0x000006b0 /* Write Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_BIT1_W 0x000006b4 /* Write Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_BIT2_W 0x000006b8 /* Write Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_BIT3_W 0x000006bc /* Write Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_BIT4_W 0x000006c0 /* Write Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_BIT5_W 0x000006c4 /* Write Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_BIT6_W 0x000006c8 /* Write Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_BIT7_W 0x000006cc /* Write Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_DM_W 0x000006d0 /* Write Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_BIT0_R_P 0x000006d4 /* Read DQSP Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_BIT0_R_N 0x000006d8 /* Read DQSN Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_BIT1_R_P 0x000006dc /* Read DQSP Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_BIT1_R_N 0x000006e0 /* Read DQSN Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_BIT2_R_P 0x000006e4 /* Read DQSP Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_BIT2_R_N 0x000006e8 /* Read DQSN Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_BIT3_R_P 0x000006ec /* Read DQSP Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_BIT3_R_N 0x000006f0 /* Read DQSN Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_BIT4_R_P 0x000006f4 /* Read DQSP Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_BIT4_R_N 0x000006f8 /* Read DQSN Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_BIT5_R_P 0x000006fc /* Read DQSP Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_BIT5_R_N 0x00000700 /* Read DQSN Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_BIT6_R_P 0x00000704 /* Read DQSP Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_BIT6_R_N 0x00000708 /* Read DQSN Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_BIT7_R_P 0x0000070c /* Read DQSP Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_BIT7_R_N 0x00000710 /* Read DQSN Bit VDL static override control register */
#define PHY_WORD_LANE_1_VDL_OVRIDE_BYTE1_BIT_RD_EN 0x00000714 /* Read Enable Bit VDL static override control register */
#define PHY_WORD_LANE_1_DYN_VDL_OVRIDE_BYTE0_RD_EN 0x00000720 /* Read Enable Byte VDL dynamic override control register */
#define PHY_WORD_LANE_1_DYN_VDL_OVRIDE_BYTE0_BIT_RD_EN 0x00000724 /* Read Enable Bit VDL dynamic override control register */
#define PHY_WORD_LANE_1_DYN_VDL_OVRIDE_BYTE0_R_P 0x00000728 /* Read DQSP Byte VDL dynamic override control register */
#define PHY_WORD_LANE_1_DYN_VDL_OVRIDE_BYTE0_R_N 0x0000072c /* Read DQSN Byte VDL dynamic override control register */
#define PHY_WORD_LANE_1_DYN_VDL_OVRIDE_BYTE0_BIT_R_P 0x00000730 /* Read DQSP Bit VDL dynamic override control register */
#define PHY_WORD_LANE_1_DYN_VDL_OVRIDE_BYTE0_BIT_R_N 0x00000734 /* Read DQSN Bit VDL dynamic override control register */
#define PHY_WORD_LANE_1_DYN_VDL_OVRIDE_BYTE0_W 0x00000738 /* Write DQ Byte VDL dynamic override control register */
#define PHY_WORD_LANE_1_DYN_VDL_OVRIDE_BYTE0_BIT_W 0x0000073c /* Write DQ Bit VDL dynamic override control register */
#define PHY_WORD_LANE_1_DYN_VDL_OVRIDE_BYTE1_RD_EN 0x00000740 /* Read Enable Byte VDL dynamic override control register */
#define PHY_WORD_LANE_1_DYN_VDL_OVRIDE_BYTE1_BIT_RD_EN 0x00000744 /* Read Enable Bit VDL dynamic override control register */
#define PHY_WORD_LANE_1_DYN_VDL_OVRIDE_BYTE1_R_P 0x00000748 /* Read DQSP Byte VDL dynamic override control register */
#define PHY_WORD_LANE_1_DYN_VDL_OVRIDE_BYTE1_R_N 0x0000074c /* Read DQSN Byte VDL dynamic override control register */
#define PHY_WORD_LANE_1_DYN_VDL_OVRIDE_BYTE1_BIT_R_P 0x00000750 /* Read DQSP Bit VDL dynamic override control register */
#define PHY_WORD_LANE_1_DYN_VDL_OVRIDE_BYTE1_BIT_R_N 0x00000754 /* Read DQSN Bit VDL dynamic override control register */
#define PHY_WORD_LANE_1_DYN_VDL_OVRIDE_BYTE1_W 0x00000758 /* Write DQ Byte VDL dynamic override control register */
#define PHY_WORD_LANE_1_DYN_VDL_OVRIDE_BYTE1_BIT_W 0x0000075c /* Write DQ Bit VDL dynamic override control register */
#define PHY_WORD_LANE_1_READ_DATA_DLY  0x00000760 /* Word Lane read channel control register */
#define PHY_WORD_LANE_1_READ_CONTROL   0x00000764 /* Word Lane read channel control register */
#define PHY_WORD_LANE_1_READ_FIFO_DATA_BL0_0 0x00000770 /* Read fifo data register, first data */
#define PHY_WORD_LANE_1_READ_FIFO_DATA_BL0_1 0x00000774 /* Read fifo data register, second data */
#define PHY_WORD_LANE_1_READ_FIFO_DATA_BL0_2 0x00000778 /* Read fifo data register, third data */
#define PHY_WORD_LANE_1_READ_FIFO_DATA_BL0_3 0x0000077c /* Read fifo data register, fourth data */
#define PHY_WORD_LANE_1_READ_FIFO_DATA_BL1_0 0x00000780 /* Read fifo data register, first data */
#define PHY_WORD_LANE_1_READ_FIFO_DATA_BL1_1 0x00000784 /* Read fifo data register, second data */
#define PHY_WORD_LANE_1_READ_FIFO_DATA_BL1_2 0x00000788 /* Read fifo data register, third data */
#define PHY_WORD_LANE_1_READ_FIFO_DATA_BL1_3 0x0000078c /* Read fifo data register, fourth data */
#define PHY_WORD_LANE_1_READ_FIFO_STATUS 0x00000790 /* Read fifo status register */
#define PHY_WORD_LANE_1_READ_FIFO_CLEAR 0x00000794 /* Read fifo status clear register */
#define PHY_WORD_LANE_1_IDLE_PAD_CONTROL 0x000007a0 /* Idle mode SSTL pad control register */
#define PHY_WORD_LANE_1_DRIVE_PAD_CTL  0x000007a4 /* SSTL pad drive characteristics control register */
   #define PHY_WORD_LANE_1_DRIVE_PAD_CTL_G_DDR_STRT         0
   #define PHY_WORD_LANE_1_DRIVE_PAD_CTL_G_DDR_MASK         (1<<PHY_WORD_LANE_1_DRIVE_PAD_CTL_G_DDR_STRT)
   #define PHY_WORD_LANE_1_DRIVE_PAD_CTL_RT120B_G_STRT      1
   #define PHY_WORD_LANE_1_DRIVE_PAD_CTL_RT120B_G_MASK      (1<<PHY_WORD_LANE_1_DRIVE_PAD_CTL_RT120B_G_STRT)
   #define PHY_WORD_LANE_1_DRIVE_PAD_CTL_RT60B_STRT         2
   #define PHY_WORD_LANE_1_DRIVE_PAD_CTL_RT60B_MASK         (1<<PHY_WORD_LANE_1_DRIVE_PAD_CTL_RT60B_STRT)
   #define PHY_WORD_LANE_1_DRIVE_PAD_CTL_VDDO_VOLTS_STRT    3
   #define PHY_WORD_LANE_1_DRIVE_PAD_CTL_VDDO_VOLTS_MASK    (3<<PHY_WORD_LANE_1_DRIVE_PAD_CTL_VDDO_VOLTS_STRT)
   #define PHY_WORD_LANE_1_DRIVE_PAD_CTL_GDDR_SYMMETRY_STRT 5
   #define PHY_WORD_LANE_1_DRIVE_PAD_CTL_GDDR_SYMMETRY_MASK (1<<PHY_WORD_LANE_1_DRIVE_PAD_CTL_GDDR_SYMMETRY_STRT)
   #define PHY_WORD_LANE_1_DRIVE_PAD_CTL_RDQS_EN_STRT       6
   #define PHY_WORD_LANE_1_DRIVE_PAD_CTL_RDQS_EN_MASK       (7<<PHY_WORD_LANE_1_DRIVE_PAD_CTL_RDQS_EN_STRT)
#define PHY_WORD_LANE_1_CLOCK_PAD_DISABLE 0x000007a8 /* Clock pad disable register */
#define PHY_WORD_LANE_1_WR_PREAMBLE_MODE 0x000007ac /* Write cycle preamble control register */



// 65nm PHY Defines
#define MC_CSR_PHY_ADD  0x0200
#define MC_CSR_PHY_BL0  0x0300
#define MC_CSR_PHY_BL1  0x0400
#define MC_CSR_PHY_BL2  0x0500
#define MC_CSR_PHY_BL3  0x0600

#define DDR23_PHY_ADDR_CTL_REVISION             0x0200
#define DDR23_PHY_ADDR_CTL_CLK_PM_CTRL          0x0204
#define DDR23_PHY_ADDR_CTL_PLL_STATUS           0x0210
#define DDR23_PHY_ADDR_CTL_PLL_CONFIG           0x0214
#define DDR23_PHY_ADDR_CTL_PLL_PRE_DIVIDER      0x0218
#define DDR23_PHY_ADDR_CTL_PLL_DIVIDER          0x021c
#define DDR23_PHY_ADDR_CTL_PLL_CONTROL1         0x0220
#define DDR23_PHY_ADDR_CTL_PLL_CONTROL2         0x0224
#define DDR23_PHY_ADDR_CTL_PLL_SS_EN            0x0228
#define DDR23_PHY_ADDR_CTL_PLL_SS_CFG           0x022c
#define DDR23_PHY_ADDR_CTL_STATIC_VDL_OVERRIDE  0x0230
#define DDR23_PHY_ADDR_CTL_DYNAMIC_VDL_OVERRIDE 0x0234
#define DDR23_PHY_ADDR_CTL_IDLE_PAD_CONTROL     0x0238
#define DDR23_PHY_ADDR_CTL_ZQ_PVT_COMP_CTL      0x023c
#define DDR23_PHY_ADDR_CTL_DRIVE_PAD_CTL        0x0240

#define DDR23_PHY_BYTE_LANE0_REVISION             0x0300
#define DDR23_PHY_BYTE_LANE0_VDL_CALIBRATE        0x0304
#define DDR23_PHY_BYTE_LANE0_VDL_STATUS           0x0308
   #define DDR23_PHY_BYTE_LANE0_VDL_STATUS_IDLE_STRT    0
   #define DDR23_PHY_BYTE_LANE0_VDL_STATUS_IDLE_MASK    (1 << DDR23_PHY_BYTE_LANE0_VDL_STATUS_IDLE_STRT)
   #define DDR23_PHY_BYTE_LANE0_VDL_STATUS_LOCK_STRT    1
   #define DDR23_PHY_BYTE_LANE0_VDL_STATUS_LOCK_MASK    (1 << DDR23_PHY_BYTE_LANE0_VDL_STATUS_LOCK_STRT)
   #define DDR23_PHY_BYTE_LANE0_VDL_STATUS_TOTAL_STRT   4
   #define DDR23_PHY_BYTE_LANE0_VDL_STATUS_TOTAL_MASK   (0x3FF << DDR23_PHY_BYTE_LANE0_VDL_STATUS_TOTAL_STRT)
#define DDR23_PHY_BYTE_LANE0_VDL_OVERRIDE_0       0x0310
#define DDR23_PHY_BYTE_LANE0_VDL_OVERRIDE_1       0x0314
#define DDR23_PHY_BYTE_LANE0_VDL_OVERRIDE_2       0x0318
#define DDR23_PHY_BYTE_LANE0_VDL_OVERRIDE_3       0x031c
#define DDR23_PHY_BYTE_LANE0_VDL_OVERRIDE_4       0x0320
#define DDR23_PHY_BYTE_LANE0_VDL_OVERRIDE_5       0x0324
#define DDR23_PHY_BYTE_LANE0_VDL_OVERRIDE_6       0x0328
#define DDR23_PHY_BYTE_LANE0_VDL_OVERRIDE_7       0x032c
#define DDR23_PHY_BYTE_LANE0_READ_CONTROL         0x0330
#define DDR23_PHY_BYTE_LANE0_FIFO_STATUS          0x0334
#define DDR23_PHY_BYTE_LANE0_FIFO_CLEAR           0x0338
#define DDR23_PHY_BYTE_LANE0_IDLE_PAD_CONTROL     0x033c
#define DDR23_PHY_BYTE_LANE0_DRIVE_PAD_CTL        0x0340
#define DDR23_PHY_BYTE_LANE0_CLOCK_PAD_DISABLE    0x0344
#define DDR23_PHY_BYTE_LANE0_WR_PREAMBLE_MODE     0x0348

#define DDR23_PHY_BYTE_LANE1_REVISION             0x0400
#define DDR23_PHY_BYTE_LANE1_VDL_CALIBRATE        0x0404
#define DDR23_PHY_BYTE_LANE1_VDL_STATUS           0x0408
   #define DDR23_PHY_BYTE_LANE1_VDL_STATUS_IDLE_STRT    0
   #define DDR23_PHY_BYTE_LANE1_VDL_STATUS_IDLE_MASK    (1 << DDR23_PHY_BYTE_LANE1_VDL_STATUS_IDLE_STRT)
   #define DDR23_PHY_BYTE_LANE1_VDL_STATUS_LOCK_STRT    1
   #define DDR23_PHY_BYTE_LANE1_VDL_STATUS_LOCK_MASK    (1 << DDR23_PHY_BYTE_LANE1_VDL_STATUS_LOCK_STRT)
   #define DDR23_PHY_BYTE_LANE1_VDL_STATUS_TOTAL_STRT   4
   #define DDR23_PHY_BYTE_LANE1_VDL_STATUS_TOTAL_MASK   (0x3FF << DDR23_PHY_BYTE_LANE1_VDL_STATUS_TOTAL_STRT)
#define DDR23_PHY_BYTE_LANE1_VDL_OVERRIDE_0       0x0410
#define DDR23_PHY_BYTE_LANE1_VDL_OVERRIDE_1       0x0414
#define DDR23_PHY_BYTE_LANE1_VDL_OVERRIDE_2       0x0418
#define DDR23_PHY_BYTE_LANE1_VDL_OVERRIDE_3       0x041c
#define DDR23_PHY_BYTE_LANE1_VDL_OVERRIDE_4       0x0420
#define DDR23_PHY_BYTE_LANE1_VDL_OVERRIDE_5       0x0424
#define DDR23_PHY_BYTE_LANE1_VDL_OVERRIDE_6       0x0428
#define DDR23_PHY_BYTE_LANE1_VDL_OVERRIDE_7       0x042c
#define DDR23_PHY_BYTE_LANE1_READ_CONTROL         0x0430
#define DDR23_PHY_BYTE_LANE1_FIFO_STATUS          0x0434
#define DDR23_PHY_BYTE_LANE1_FIFO_CLEAR           0x0438
#define DDR23_PHY_BYTE_LANE1_IDLE_PAD_CONTROL     0x043c
#define DDR23_PHY_BYTE_LANE1_DRIVE_PAD_CTL        0x0440
#define DDR23_PHY_BYTE_LANE1_CLOCK_PAD_DISABLE    0x0444
#define DDR23_PHY_BYTE_LANE1_WR_PREAMBLE_MODE     0x0448


#define DDR23_PHY_BYTE_LANE2_REVISION             0x0500
#define DDR23_PHY_BYTE_LANE2_VDL_CALIBRATE        0x0504
#define DDR23_PHY_BYTE_LANE2_VDL_STATUS           0x0508
#define DDR23_PHY_BYTE_LANE2_VDL_OVERRIDE_0       0x0510
#define DDR23_PHY_BYTE_LANE2_VDL_OVERRIDE_1       0x0514
#define DDR23_PHY_BYTE_LANE2_VDL_OVERRIDE_2       0x0518
#define DDR23_PHY_BYTE_LANE2_VDL_OVERRIDE_3       0x051c
#define DDR23_PHY_BYTE_LANE2_VDL_OVERRIDE_4       0x0520
#define DDR23_PHY_BYTE_LANE2_VDL_OVERRIDE_5       0x0524
#define DDR23_PHY_BYTE_LANE2_VDL_OVERRIDE_6       0x0528
#define DDR23_PHY_BYTE_LANE2_VDL_OVERRIDE_7       0x052c
#define DDR23_PHY_BYTE_LANE2_READ_CONTROL         0x0530
#define DDR23_PHY_BYTE_LANE2_FIFO_STATUS          0x0534
#define DDR23_PHY_BYTE_LANE2_FIFO_CLEAR           0x0538
#define DDR23_PHY_BYTE_LANE2_IDLE_PAD_CONTROL     0x053c
#define DDR23_PHY_BYTE_LANE2_DRIVE_PAD_CTL        0x0540
#define DDR23_PHY_BYTE_LANE2_CLOCK_PAD_DISABLE    0x0544
#define DDR23_PHY_BYTE_LANE2_WR_PREAMBLE_MODE     0x0548

#define DDR23_PHY_BYTE_LANE3_REVISION             0x0600
#define DDR23_PHY_BYTE_LANE3_VDL_CALIBRATE        0x0604
#define DDR23_PHY_BYTE_LANE3_VDL_STATUS           0x0608
#define DDR23_PHY_BYTE_LANE3_VDL_OVERRIDE_0       0x0610
#define DDR23_PHY_BYTE_LANE3_VDL_OVERRIDE_1       0x0614
#define DDR23_PHY_BYTE_LANE3_VDL_OVERRIDE_2       0x0618
#define DDR23_PHY_BYTE_LANE3_VDL_OVERRIDE_3       0x061c
#define DDR23_PHY_BYTE_LANE3_VDL_OVERRIDE_4       0x0620
#define DDR23_PHY_BYTE_LANE3_VDL_OVERRIDE_5       0x0624
#define DDR23_PHY_BYTE_LANE3_VDL_OVERRIDE_6       0x0628
#define DDR23_PHY_BYTE_LANE3_VDL_OVERRIDE_7       0x062c
#define DDR23_PHY_BYTE_LANE3_READ_CONTROL         0x0630
#define DDR23_PHY_BYTE_LANE3_FIFO_STATUS          0x0634
#define DDR23_PHY_BYTE_LANE3_FIFO_CLEAR           0x0638
#define DDR23_PHY_BYTE_LANE3_IDLE_PAD_CONTROL     0x063c
#define DDR23_PHY_BYTE_LANE3_DRIVE_PAD_CTL        0x0640
#define DDR23_PHY_BYTE_LANE3_CLOCK_PAD_DISABLE    0x0644
#define DDR23_PHY_BYTE_LANE3_WR_PREAMBLE_MODE     0x0648

// Global registers

#define MC_CSR_GCFG	  0x0800
   #define MC_CSR_GCFG_DRAM_SIZE1(x)      ((x & 0xf)<<0)
   #define MC_CSR_GCFG_DRAM_SIZE2(x)      ((x & 0xf)<<4)
   #define MC_CSR_GCFG_WRACK_BUG_FIX_EN_STRT (16)
   #define MC_CSR_GCFG_WRACK_BUG_FIX_EN_MSK  (1 << MC_CSR_GCFG_WRACK_BUG_FIX_EN_STRT)
   #define MC_CSR_GCFG_MEMINITDONE(x)     ((x & 0x1)<<8)
   #define MC_CSR_GCFG_MEMINITDONE_STRT   (8)
   #define MC_CSR_GCFG_MEMINITDONE_MSK    (1<<MC_CSR_GCFG_MEMINITDONE_STRT)
   #define MC_CSR_GCFG_MAX_AGE(x)         ((x & 0xf)<<20)
   #define MC_CSR_GCFG_FORCE_SEQ          (1<<30)

#define MC_CSR_VERS  0x0804
#define MC_CSR_VERS_VAL 0x10000100

//#define MC_CSR_LBIST_CFG  0x0804
//   #define MC_LBIST_ENABLE      (1<<0)
//   #define MC_LBIST_CKE_DISABLE (1<<1)
//   #define MC_LBIST_CON_DONE    (1<<4)
//   #define MC_LBIST_DAT_DONE    (1<<5)
//   #define MC_LBIST_CON_PASS    (1<<6)
//   #define MC_LBIST_DAT_PASS    (1<<7)

// PHY_CONTROL_REGS_PHYBIST_CNTRL 0x0270
//#define PHY_CRPC_ENABLE (1<<0)
//#define PHY_CRPC_CKDIS  (1<<1)
//#define PHY_CRPC_FORCE_ODT (1<<4)
//#define PHY_CRPC_FORCE_CS_N (1<<5)
// new map
#define PHY_CRPC_ENABLE (1<<0)
#define PHY_CRPC_LPBK  (1<<1)
#define PHY_CRPC_FCTL  (1<<2)
#define PHY_CRPC_FDAT  (1<<3)
#define PHY_CRPC_FORCE_ODT (1<<4)


//PHY_CONTROL_REGS_PHYBIST_STATUS 0x278
#define PHY_CRPS_DAT_PASS (1<<3)
#define PHY_CRPS_CTL_PASS (1<<2)
#define PHY_CRPS_DAT_DONE (1<<1)
#define PHY_CRPS_CTL_DONE (1<<0)


#define MC_CSR_LBIST_SEED      0x0808
#define MC_CSR_ARB             0x080c
   #define MC_SINGLE_RR         (0<<16)
   #define MC_SINGLE_PRI        (2<<16) 
   #define MC_BURST_RR          (4<<16)
   #define MC_BURST_PRI         (6<<16)
   #define MC_BURST_PRI_PREEMPT (7<<16) 

#define MC_CSR_PI_GCF          0x0810
#define MC_CSR_PI_UBUS_CTL     0x0814
#define MC_CSR_PI_MIPS_CTL     0x0818
#define MC_CSR_PI_DSL_MIPS_CTL 0x081c
#define MC_CSR_PI_DSL_PHY_CTL  0x0820
#define MC_CSR_PI_UBUS_ST      0x0824
#define MC_CSR_PI_MIPS_ST      0x0828
#define MC_CSR_PI_DSL_MIPS_ST  0x082c
#define MC_CSR_PI_DSL_PHY_ST   0x0830
#define MC_CSR_PI_UBUS_SMPL    0x0834
#define MC_CSR_TESTMODE        0x0838
#define MC_CSR_TEST_CFG1       0x083c
   #define MC_TEST_ENABLE            (1<<0)
   #define MC_TEST_DONE              (1<<1)
   #define MC_TEST_ERROR             (1<<2)
   #define MC_TEST_STOP              (1<<3)
   #define MC_TEST_RD                (0<<4)
   #define MC_TEST_WRT               (1<<4)
   #define MC_TEST_WRTRD             (2<<4)
   #define MC_TEST_ADDR_MODE(x)      ((x & 0x3)<<6)
   #define MC_TEST_DATA_MODE(x)      ((x & 0x1f)<<8)
   #define MC_TEST_PRBS_ORDER(x)     ((x & 0x3)<<13)
   #define MC_TEST_VICT_ENABLE       (1<<15)
   #define MC_TEST_VICT_SWEEP_ENABLE (1<<16)
#define MC_CSR_TEST_PAT        0x0840
   #define MC_TEST_DATA_PATTERN0(x) ((x & 0xffff))<<0)
   #define MC_TEST_DATA_PATTERN1(x) ((x & 0xffff))<<16)
#define MC_CSR_TEST_COUNT      0x0844
#define MC_CSR_TEST_CURR_COUNT 0x0848
#define MC_CSR_TEST_ADDR_UPDT  0x084c
#define MC_CSR_TEST_ADDR       0x0850
#define MC_CSR_TEST_DATA0_0    0x0854
#define MC_CSR_TEST_DATA0_1    0x0858
#define MC_CSR_TEST_DATA0_2    0x085c
#define MC_CSR_TEST_DATA0_3    0x0860
#define MC_CSR_TEST_DATA1_0    0x0864
#define MC_CSR_TEST_DATA1_1    0x0868
#define MC_CSR_TEST_DATA1_2    0x086c
#define MC_CSR_TEST_DATA1_3    0x0870
#define MC_CSR_REPLY_DATA0     0x0874
#define MC_CSR_REPLY_DATA1     0x0878
#define MC_CSR_REPLY_DATA2     0x087c
#define MC_CSR_REPLY_DATA3     0x0880
#define MC_CSR_REPLY_STAT      0x0884

/*
#####################################################################
# Periph Strap Register
#####################################################################
*/

#define GPIO_MEMC_PHY_CONTROL           (0x190)
   #define GPIO_MEMC_PHY_CONTROL_PHY_4X_MODE_STRT      0
   #define GPIO_MEMC_PHY_CONTROL_PHY_4X_MODE_MASK      (1<<GPIO_MEMC_PHY_CONTROL_PHY_4X_MODE_STRT)
   #define GPIO_MEMC_PHY_CONTROL_PHY_BYPASS_PLL_STRT   1
   #define GPIO_MEMC_PHY_CONTROL_PHY_BYPASS_PLL_MASK   (1<<GPIO_MEMC_PHY_CONTROL_PHY_BYPASS_PLL_STRT)
#define GPIO_MEMC_CONTROL               (0x190)
   #define GPIO_MEMC_CONTROL_MC_TEST_DISABLE_STRT      0
   #define GPIO_MEMC_CONTROL_MC_TEST_DISABLE_MASK      (1 <<GPIO_MEMC_CONTROL_MC_TEST_DISABLE_STRT)
   #define GPIO_MEMC_CONTROL_MC_TEST_DONE_STRT         3
   #define GPIO_MEMC_CONTROL_MC_TEST_DONE_MASK         (1 <<GPIO_MEMC_CONTROL_MC_TEST_DONE_STRT)
   #define GPIO_MEMC_CONTROL_MC_TEST_SLEEP_MODE_STRT   4
   #define GPIO_MEMC_CONTROL_MC_TEST_SLEEP_MODE_MASK   (1 <<GPIO_MEMC_CONTROL_MC_TEST_SLEEP_MODE_STRT)

/*
#####################################################################
# Perf/Interrupt Registers
#####################################################################
*/
#define PERF_TIMER_CONTROL                      0x08
#define PERF_TIMER_CONTROL_SOFTRST              (1<<0)
#define PERF_PG_ALT_BV				0x2bc
/*
#####################################################################
# Timer Registers
#####################################################################
*/
#define	    	 TIMER_PER_TIMRIRQSTAT		0xc0  /* offset from TIMER_BASE */
	#define		TIMER_0_INTERRUPT_STATUS   (1<<0)
	#define 	TIMER_1_INTERRUPT_STATUS   (1<<1)
	#define 	TIMER_2_INTERRUPT_STATUS   (1<<2)
	#define		TIMER_0_INTERRUPT_MASK     (1<<8)
	#define 	TIMER_1_INTERRUPT_MASK     (1<<9)
	#define 	TIMER_2_INTERRUPT_MASK     (1<<10) 
#define	    	 TIMER_PER_TIMERCTL0	        0xc4 
	#define		TIMER_CTRL_ENABLE	(1<<31)
	#define		TIMER_CTRL_CNT_MODE	(1<<30)
	/*		timer count bits 29-0 	*/
#define	    	 TIMER_PER_TIMERCTL1	        0xc8 
#define	    	 TIMER_PER_TIMERCTL2	        0xcc 
#define	    	 TIMER_PER_TIMERCNT0	        0xd0 
#define	    	 TIMER_PER_TIMERCNT1	        0xd4 
#define	    	 TIMER_PER_TIMERCNT2	        0xd8 
#define	    	 TIMER_PER_MEM_TM	        0xe8 
#define	    	 TIMER_PER_EPHY_TESTCNTRL       0xec 
 
/*
#####################################################################
# UART Control Registers
#####################################################################
*/
#define UART0CONTROL     0x01
#define UART0CONFIG      0x02
#define UART0RXTIMEOUT   0x03
#define UART0BAUD        0x04
#define UART0FIFOCFG     0x0a
#define UART0INTMASK     0x10
#define UART0INTSTAT     0x12
#define UART0DATA        0x17

#define BRGEN            0x80   /* Control register bit defs */
#define TXEN             0x40
#define RXEN             0x20
#define LOOPBK           0x10
#define TXPARITYEN       0x08
#define TXPARITYEVEN     0x04
#define RXPARITYEN       0x02
#define RXPARITYEVEN     0x01

#define XMITBREAK        0x40   /* Config register */
#define BITS5SYM         0x00
#define BITS6SYM         0x10
#define BITS7SYM         0x20
#define BITS8SYM         0x30
#define ONESTOP          0x07
#define TWOSTOP          0x0f

#define DELTAIP         0x0001
#define TXUNDERR        0x0002
#define TXOVFERR        0x0004
#define TXFIFOTHOLD     0x0008
#define TXREADLATCH     0x0010
#define TXFIFOEMT       0x0020
#define RXUNDERR        0x0040
#define RXOVFERR        0x0080
#define RXTIMEOUT       0x0100
#define RXFIFOFULL      0x0200
#define RXFIFOTHOLD     0x0400
#define RXFIFONE        0x0800
#define RXFRAMERR       0x1000
#define RXPARERR        0x2000
#define RXBRK           0x4000

/*
#####################################################################
# Internal Memory utilization (by internal bootrom)
#####################################################################
*/

#define BTRM_INT_MEM_UTIL_SIZE                  (256 * 1024)
#define BTRM_INT_MEM_BEGIN_ADDR                 0x00000000
#define BTRM_INT_MEM_END_ADDR                   (BTRM_INT_MEM_BEGIN_ADDR + BTRM_INT_MEM_UTIL_SIZE)

#define BTRM_INT_MEM_STACK_PTR_ADDR             (BTRM_INT_MEM_BEGIN_ADDR + 0x1e000)
#define BTRM_INT_MEM_SBI_LINK_ADDR              (BTRM_INT_MEM_BEGIN_ADDR + 0x20000)

#define BTRM_INT_MEM_32K_BLOCK                  0x93040000
#define BTRM_INT_MEM_SHREDDER_PROG_ADDR         BTRM_INT_MEM_32K_BLOCK
#define BTRM_INT_MEM_TP1_PROG_ADDR              (BTRM_INT_MEM_32K_BLOCK + 0x1f00)
#define BTRM_INT_MEM_CREDENTIALS_ADDR           (BTRM_INT_MEM_32K_BLOCK + 0x2000)
#define BTRM_INT_MEM_32K_BLOCK_END_ADDR         (BTRM_INT_MEM_32K_BLOCK + 0x8000)

#define BTRM_INT_MEM_ENCR_COMP_CFE_RAM_ADDR     (BTRM_INT_MEM_BEGIN_ADDR + 0x1000)
#define BTRM_INT_MEM_COMP_CFE_RAM_ADDR          (BTRM_INT_MEM_BEGIN_ADDR + 0x0000)

#define BTRM_INT_MEM_128K_BLOCK                 0x930a0000
#define BTRM_INT_MEM_128K_BLOCK_END_ADDR        (BTRM_INT_MEM_128K_BLOCK + 0x20000)
/*
#####################################################################
# Pin Muxing
#####################################################################
*/

#define PINMUX_SLICC_FUNC       3
#define PINMUX_SLICD_FUNC       2

#define NO_PINMUX       100
#if !defined(__ASSEMBLER__)
static const char LED_CTRL_FUNC[74] = {NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,
                                        4, 4, 3, 3, 4, 4, NO_PINMUX ,4, 4, NO_PINMUX,
                                        NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,
                                        NO_PINMUX,NO_PINMUX,NO_PINMUX, 1, 1, NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,
                                        NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,
                                        NO_PINMUX, 4, 4, 4, 4, NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,
                                        NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX,
                                        NO_PINMUX,NO_PINMUX,NO_PINMUX,NO_PINMUX};
#endif

#define PINMUX_DSLIC_CLK_PIN         0     
#define PINMUX_DSLIC_STDOUT_PIN      1
#define PINMUX_DSLIC_STDIN_PIN       2
#define PINMUX_DSLIC_ENABLE_PIN      3

#define PINMUX_CSLIC_CLK_PIN         41     
#define PINMUX_CSLIC_STDOUT_PIN      42
#define PINMUX_CSLIC_STDIN_PIN       38
#define PINMUX_CSLIC_ENABLE_PIN      40

#define PINMUX_EGPHY0_LED_PIN       5
#define PINMUX_EGPHY0_LED_FUNC      1
#define PINMUX_EGPHY1_LED_PIN       52
#define PINMUX_EGPHY1_LED_FUNC      2
#define PINMUX_EGPHY2_LED_PIN       9
#define PINMUX_EGPHY2_LED_FUNC      3
#define PINMUX_EGPHY3_LED_PIN       54
#define PINMUX_EGPHY3_LED_FUNC      2

#define PINMUX_ROGUE_ONU_PIN        51
#define PINMUX_ROGUE_ONU_FUNC       7

#define PINMUX_SER_LED_CLK_A_PIN    65
#define PINMUX_SER_LED_DAT_A_PIN    67
#define PINMUX_SER_LED_A_FUNC       4
#define PINMUX_SER_LED_CLK_B_PIN    33
#define PINMUX_SER_LED_DAT_B_PIN    34
#define PINMUX_SER_LED_B_FUNC       3
#define PINMUX_SER_LED_CLK_C_PIN    10
#define PINMUX_SER_LED_DAT_C_PIN    11
#define PINMUX_SER_LED_C_FUNC       1
#define PINMUX_SER_LED_GATE_PIN     17
#define PINMUX_SER_LED_GATE_FUNC    1

/* Time Synchronization */
#define PINMUX_TSYNC_1025MHZ_11_FUNC 7
#define PINMUX_TSYNC_8KHZ_4_FUNC     7
#define PINMUX_TSYNC_1PPS_6_FUNC     4
#define PINMUX_TSYNC_1PPS_52_FUNC    7

#define PINMUX_MII_RXCOL            5
#define PINMUX_MII_RXCRS            9
#define PINMUX_MII_RXER             12
#define PINMUX_MII_TXER             13
#define PINMUX_RGMII_TXCLK_PIN      41
#define PINMUX_RGMII_TXCTL_PIN      42
#define PINMUX_RGMII_TXD_00_PIN     43
#define PINMUX_RGMII_TXD_01_PIN     44
#define PINMUX_RGMII_TXD_02_PIN     45
#define PINMUX_RGMII_TXD_03_PIN     46
#define PINMUX_RGMII_MDC            47

#define PINMUX_RGMII_FUNC           1
#define PINMUX_MII_FUNC             4
#define PINMUX_EWAKE_GPON_MAC_PIN   10
#define PINMUX_EWAKE_GPON_MAC_FUNC  3

#define PINMUX_TX_LASER_ON_N_PIN    15
#define PINMUX_TX_LASER_ON_N_FUNC   7

#define PINMUX_WAN_NCO_10M_PIN      16
#define PINMUX_WAN_NCO_10M_FUNC     7
#define PINMUX_TRX_SD_PIN           53
#define PINMUX_TRX_SD_FUNC          7

#ifdef __cplusplus
}
#endif

#endif
